#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flarea, flareb, flarec1, flarec2, turreta, hatch, shell1a,
       shell4b, shell3b, shell2b, shell1b, shell2a, shell3a, shell4a, turretb,
       turretc, hatchc, sleevec, hatchb, barrelc1, barrelc2, collarb, barrelb,
       barrela, sleevea, sleeveb;

static-var  gun_3, restore_delay, Static_Var_3, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8


activatescr()
{
	if( TRUE )
	{
		turn hatch to z-axis <0.000000> now;
		turn hatch to z-axis <-31.000000> speed <94.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		move hatch to x-axis [6.400000] speed [8.000000];
		move hatch to y-axis [-7.200000] speed [10.000000];
		turn hatch to z-axis <-49.000000> speed <52.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		move shell1a to z-axis [0.000000] speed [0.000000];
		move shell4b to x-axis [-8.000000] speed [12.000000];
		move shell3b to z-axis [-8.000000] speed [12.000000];
		move shell2b to x-axis [4.000000] speed [10.000000];
		move shell1b to z-axis [4.000000] speed [10.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move shell1a to x-axis [6.400000] speed [8.000000];
		move shell1a to z-axis [0.000000] speed [0.000000];
		move shell2a to z-axis [-6.400000] speed [8.000000];
		move shell3a to x-axis [-6.400000] speed [8.000000];
		move shell4a to z-axis [6.400000] speed [8.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move shell1a to y-axis [-23.200000] speed [34.000000];
		move shell2a to y-axis [-23.200000] speed [34.000000];
		move shell3a to y-axis [-23.200000] speed [32.000000];
		move shell4a to y-axis [-23.200000] speed [32.000000];
		sleep 150;
	}
	if( TRUE )
	{
		sleep 100;
	}
	if( TRUE )
	{
		move turreta to y-axis [8.800000] speed [12.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move turreta to y-axis [17.600000] speed [12.000000];
		move turretb to y-axis [8.800000] speed [12.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move turreta to y-axis [23.200000] speed [8.000000];
		move turretb to y-axis [14.400000] speed [6.000000];
		move turretc to y-axis [5.600000] speed [6.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move hatchc to y-axis [3.200000] speed [4.000000];
		move hatchc to z-axis [-1.600000] speed [2.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move sleevec to z-axis [8.000000] speed [12.000000];
		move hatchb to x-axis [5.600000] speed [8.000000];
		move hatchb to z-axis [-6.400000] speed [8.000000];
		turn hatchb to y-axis <-46.000000> speed <137.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		move barrelc1 to z-axis [6.400000] speed [16.000000];
		move barrelc2 to z-axis [6.400000] speed [16.000000];
		move collarb to z-axis [7.200000] speed [16.000000];
		move barrelb to z-axis [7.200000] speed [20.000000];
		move barrela to z-axis [7.200000] speed [20.000000];
		sleep 120;
	}
	sleep 22;
}

deactivatescr()
{
	if( TRUE )
	{
		stop-spin turreta around y-axis;
		stop-spin turretb around y-axis;
		stop-spin turretc around y-axis;
		stop-spin sleevea around x-axis;
		stop-spin sleeveb around x-axis;
		stop-spin sleevec around x-axis;
		move turreta to y-axis [23.200000] now;
		move turretb to y-axis [14.400000] now;
		move turretc to y-axis [5.600000] now;
		move shell1a to x-axis [6.400000] now;
		move shell1a to y-axis [-23.200000] now;
		move shell1a to z-axis [0.000000] now;
		move shell2a to y-axis [-23.200000] now;
		move shell2a to z-axis [-6.400000] now;
		move shell3a to x-axis [-6.400000] now;
		move shell3a to y-axis [-23.200000] now;
		move shell4a to y-axis [-23.200000] now;
		move shell4a to z-axis [6.400000] now;
		move shell4b to x-axis [-8.000000] now;
		move shell3b to z-axis [-8.000000] now;
		move shell2b to x-axis [8.000000] now;
		move shell1b to z-axis [8.000000] now;
		move hatch to x-axis [6.400000] now;
		move hatch to y-axis [-7.200000] now;
		move hatchc to y-axis [3.200000] now;
		move hatchc to z-axis [-1.600000] now;
		move sleevec to z-axis [8.000000] now;
		move barrelc1 to z-axis [6.400000] now;
		move barrelc2 to z-axis [6.400000] now;
		move collarb to z-axis [7.200000] now;
		move hatchb to x-axis [5.600000] now;
		move hatchb to z-axis [-6.400000] now;
		move barrelb to z-axis [7.200000] now;
		move barrela to z-axis [7.200000] now;
		move barrela to z-axis [0.000000] speed [10.000000];
		turn hatch to z-axis <-49.000000> now;
		turn hatchb to y-axis <-47.000000> now;
		move barrelb to z-axis [0.000000] speed [10.000000];
		move barrelc1 to z-axis [0.000000] speed [8.000000];
		move barrelc2 to z-axis [0.000000] speed [8.000000];
		move collarb to z-axis [0.000000] speed [8.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move sleevec to z-axis [0.000000] speed [12.000000];
		move hatchb to x-axis [0.000000] speed [8.000000];
		move hatchb to z-axis [0.000000] speed [8.000000];
		turn hatchb to y-axis <0.000000> speed <137.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		move hatchc to y-axis [0.000000] speed [4.000000];
		move hatchc to z-axis [0.000000] speed [2.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move turreta to y-axis [17.600000] speed [8.000000];
		move turretb to y-axis [8.800000] speed [8.000000];
		move turretc to y-axis [0.000000] speed [8.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move turreta to y-axis [8.800000] speed [12.000000];
		move turretb to y-axis [0.000000] speed [12.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move turreta to y-axis [0.000000] speed [12.000000];
		sleep 150;
	}
	if( TRUE )
	{
		sleep 100;
	}
	if( TRUE )
	{
		move shell1a to y-axis [0.000000] speed [34.000000];
		move shell2a to y-axis [0.000000] speed [34.000000];
		move shell3a to y-axis [0.000000] speed [34.000000];
		move shell4a to y-axis [0.000000] speed [34.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move shell1a to x-axis [0.000000] speed [10.000000];
		move shell1a to z-axis [0.000000] speed [0.000000];
		move shell2a to z-axis [0.000000] speed [10.000000];
		move shell3a to x-axis [0.000000] speed [10.000000];
		move shell4a to z-axis [0.000000] speed [10.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move shell1a to z-axis [0.000000] speed [0.000000];
		move shell4b to x-axis [0.000000] speed [12.000000];
		move shell3b to z-axis [0.000000] speed [12.000000];
		move shell2b to x-axis [0.000000] speed [12.000000];
		move shell1b to z-axis [0.000000] speed [10.000000];
		sleep 150;
	}
	if( TRUE )
	{
		move hatch to x-axis [0.000000] speed [8.000000];
		move hatch to y-axis [0.000000] speed [10.000000];
		turn hatch to z-axis <-31.000000> speed <53.000000>;
		sleep 150;
	}
	if( TRUE )
	{
		turn hatch to z-axis <0.000000> speed <96.000000>;
		sleep 150;
	}
	sleep 27;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	dont-cache barrela;
	dont-cache barrelb;
	dont-cache barrelc1;
	dont-cache barrelc2;
	dont-cache collarb;
	dont-cache flarea;
	dont-cache flareb;
	dont-cache flarec1;
	dont-cache flarec2;
	dont-cache hatch;
	dont-cache hatchb;
	dont-cache hatchc;
	dont-cache shell1a;
	dont-cache shell1b;
	dont-cache shell2a;
	dont-cache shell2b;
	dont-cache shell3a;
	dont-cache shell3b;
	dont-cache shell4a;
	dont-cache shell4b;
	dont-cache sleevea;
	dont-cache sleeveb;
	dont-cache sleevec;
	dont-cache turreta;
	dont-cache turretb;
	dont-cache turretc;
	set ARMORED to 0;
	if( !Static_Var_3 )
	{
		call-script activatescr();
	}
	Static_Var_3 = 1;
}

Stop()
{
	Static_Var_3 = 0;
	call-script deactivatescr();
	set ARMORED to 1;
	cache barrela;
	cache barrelb;
	cache barrelc1;
	cache barrelc2;
	cache collarb;
	cache flarea;
	cache flareb;
	cache flarec1;
	cache flarec2;
	cache hatch;
	cache hatchb;
	cache hatchc;
	cache shell1a;
	cache shell1b;
	cache shell2a;
	cache shell2b;
	cache shell3a;
	cache shell3b;
	cache shell4a;
	cache shell4b;
	cache sleevea;
	cache sleeveb;
	cache sleevec;
	cache turreta;
	cache turretb;
	cache turretc;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide flarea;
	hide flareb;
	hide flarec1;
	hide flarec2;
	dont-shade barrela;
	dont-shade barrelb;
	dont-shade barrelc1;
	dont-shade barrelc2;
	dont-shade collarb;
	dont-shade flarea;
	dont-shade flareb;
	dont-shade flarec1;
	dont-shade flarec2;
	dont-shade hatch;
	dont-shade hatchb;
	dont-shade hatchc;
	dont-shade shell1a;
	dont-shade shell1b;
	dont-shade shell2a;
	dont-shade shell2b;
	dont-shade shell3a;
	dont-shade shell3b;
	dont-shade shell4a;
	dont-shade shell4b;
	dont-shade sleevea;
	dont-shade sleeveb;
	dont-shade sleevec;
	dont-shade turreta;
	dont-shade turretb;
	dont-shade turretc;
	gun_3 = flarea;
	call-script InitState();
	Static_Var_3 = 0;
	restore_delay = 2000;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 250;
	}
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	signal SIG_AIM;
	signal SIG_AIM_2;
	signal SIG_AIM_3;
	start-script RequestState(1);
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 4;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_3 )
	{
		sleep 250;
	}
	turn turreta to y-axis heading speed <50.000000>;
	turn sleevea to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn turreta around y-axis;
	wait-for-turn sleevea around x-axis;
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	while( !Static_Var_3 )
	{
		sleep 250;
	}
	turn turretb to y-axis heading speed <200.000000>;
	turn sleeveb to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn turretb around y-axis;
	wait-for-turn sleeveb around x-axis;
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	while( !Static_Var_3 )
	{
		sleep 250;
	}
	turn turretc to y-axis heading speed <300.000000>;
	turn sleevec to x-axis <0.000000> - pitch speed <300.000000>;
	wait-for-turn turretc around y-axis;
	wait-for-turn sleevec around x-axis;
	return (1);
}

FirePrimary()
{
	show flarea;
	sleep 150;
	hide flarea;
}

FireSecondary()
{
	show flareb;
	sleep 150;
	hide flareb;
}

FireTertiary()
{
	if( gun_3 == 1 )
	{
		show flarec1;
		sleep 150;
		hide flarec1;
		gun_3 = flareb;
		return (0);
	}
	if( gun_3 == 2 )
	{
		show flarec2;
		sleep 150;
		hide flarec2;
		gun_3 = flarea;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turreta;
}

AimFromSecondary(piecenum)
{
	piecenum = turretb;
}

AimFromTertiary(piecenum)
{
	piecenum = turretc;
}

QueryPrimary(piecenum)
{
	piecenum = flarea;
}

QuerySecondary(piecenum)
{
	piecenum = flareb;
}

QueryTertiary(piecenum)
{
	if( gun_3 == 1 )
	{
		piecenum = flarec1;
	}
	if( gun_3 == 2 )
	{
		piecenum = flarec2;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flarea;
	hide flareb;
	hide flarec1;
	hide flarec2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrela type NOHEATCLOUD;
		explode barrelb type NOHEATCLOUD;
		explode barrelc1 type NOHEATCLOUD;
		explode barrelc2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode collarb type NOHEATCLOUD;
		explode flarea type NOHEATCLOUD;
		explode flareb type NOHEATCLOUD;
		explode flarec1 type NOHEATCLOUD;
		explode flarec2 type NOHEATCLOUD;
		explode hatch type NOHEATCLOUD;
		explode hatchb type NOHEATCLOUD;
		explode hatchc type NOHEATCLOUD;
		explode shell1a type NOHEATCLOUD;
		explode shell1b type NOHEATCLOUD;
		explode shell2a type NOHEATCLOUD;
		explode shell2b type NOHEATCLOUD;
		explode shell3a type NOHEATCLOUD;
		explode shell3b type NOHEATCLOUD;
		explode shell4a type NOHEATCLOUD;
		explode shell4b type NOHEATCLOUD;
		explode sleevea type NOHEATCLOUD;
		explode sleeveb type NOHEATCLOUD;
		explode sleevec type NOHEATCLOUD;
		explode turreta type NOHEATCLOUD;
		explode turretb type NOHEATCLOUD;
		explode turretc type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrela type NOHEATCLOUD | FALL;
		explode barrelb type NOHEATCLOUD | FALL;
		explode barrelc1 type NOHEATCLOUD | FALL;
		explode barrelc2 type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD;
		explode collarb type NOHEATCLOUD | FALL;
		explode flarea type NOHEATCLOUD | FALL;
		explode flareb type NOHEATCLOUD | FALL;
		explode flarec1 type NOHEATCLOUD | FALL;
		explode flarec2 type NOHEATCLOUD | FALL;
		explode hatch type NOHEATCLOUD | FALL;
		explode hatchb type NOHEATCLOUD | FALL;
		explode hatchc type NOHEATCLOUD | FALL;
		explode shell1a type NOHEATCLOUD;
		explode shell1b type NOHEATCLOUD;
		explode shell2a type NOHEATCLOUD;
		explode shell2b type NOHEATCLOUD;
		explode shell3a type NOHEATCLOUD;
		explode shell3b type NOHEATCLOUD;
		explode shell4a type NOHEATCLOUD;
		explode shell4b type NOHEATCLOUD;
		explode sleevea type NOHEATCLOUD | FALL;
		explode sleeveb type NOHEATCLOUD | FALL;
		explode sleevec type NOHEATCLOUD | FALL;
		explode turreta type NOHEATCLOUD;
		explode turretb type NOHEATCLOUD;
		explode turretc type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrela type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrelb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrelc1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrelc2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode collarb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flarea type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flareb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flarec1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flarec2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode hatch type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode hatchb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode hatchc type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode shell1a type NOHEATCLOUD;
		explode shell1b type NOHEATCLOUD;
		explode shell2a type NOHEATCLOUD;
		explode shell2b type NOHEATCLOUD;
		explode shell3a type NOHEATCLOUD;
		explode shell3b type NOHEATCLOUD;
		explode shell4a type NOHEATCLOUD;
		explode shell4b type NOHEATCLOUD;
		explode sleevea type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeveb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleevec type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turreta type NOHEATCLOUD;
		explode turretb type NOHEATCLOUD;
		explode turretc type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrela type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrelb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrelc1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrelc2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode collarb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flarea type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flareb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flarec1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flarec2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode hatch type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode hatchb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode hatchc type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode shell1a type NOHEATCLOUD;
	explode shell1b type NOHEATCLOUD;
	explode shell2a type NOHEATCLOUD;
	explode shell2b type NOHEATCLOUD;
	explode shell3a type NOHEATCLOUD;
	explode shell3b type NOHEATCLOUD;
	explode shell4a type NOHEATCLOUD;
	explode shell4b type NOHEATCLOUD;
	explode sleevea type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeveb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleevec type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turreta type NOHEATCLOUD;
	explode turretb type NOHEATCLOUD;
	explode turretc type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
