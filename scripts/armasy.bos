#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, slip, beam1, beam2, piling1, piling2, explode1, explode2,
       nano2, nano1;

static-var  spray, unitviewer, Static_Var_3, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_ACTIVATE			2


activatescr()
{
	if( TRUE )
	{
		move nano2 to y-axis [0.000000] now;
		move nano2 to y-axis [7.800006] speed [15.175110];
		move nano1 to y-axis [0.000000] now;
		move nano1 to y-axis [7.650000] speed [14.883276];
		sleep 514;
	}
	if( TRUE )
	{
		turn nano2 to x-axis <58.060440> speed <112.087912>;
		turn nano1 to x-axis <58.060440> speed <112.087912>;
		sleep 518;
	}
	if( TRUE )
	{
		turn piling1 to y-axis <-52.659341> speed <101.467033>;
		turn piling2 to y-axis <47.708791> speed <91.928571>;
		sleep 519;
	}
	sleep 26;
}

deactivatescr()
{
	if( TRUE )
	{
		move nano2 to y-axis [7.800006] now;
		move nano1 to y-axis [7.650000] now;
		turn piling1 to y-axis <-52.659341> now;
		turn piling1 to y-axis <0.000000> speed <102.456044>;
		turn piling2 to y-axis <47.708791> now;
		turn piling2 to y-axis <0.000000> speed <92.824176>;
		turn nano2 to x-axis <58.060440> now;
		turn nano1 to x-axis <58.060440> now;
		sleep 514;
	}
	if( TRUE )
	{
		turn nano2 to x-axis <0.000000> speed <112.087912>;
		turn nano1 to x-axis <0.000000> speed <112.087912>;
		sleep 518;
	}
	if( TRUE )
	{
		move nano2 to y-axis [0.000000] speed [15.028912];
		move nano1 to y-axis [0.000000] speed [14.739893];
		sleep 519;
	}
	sleep 26;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{
	dont-cache beam1;
	dont-cache beam2;
	dont-cache nano1;
	dont-cache nano2;
	dont-cache piling1;
	dont-cache piling2;
	dont-cache slip;
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
	cache beam1;
	cache beam2;
	cache nano1;
	cache nano2;
	cache piling1;
	cache piling2;
	cache slip;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	dont-shade beam1;
	dont-shade beam2;
	dont-shade nano1;
	dont-shade nano2;
	dont-shade piling1;
	dont-shade piling2;
	dont-shade slip;
	spray = base;
	unitviewer = FALSE;
	call-script InitState();
	start-script SmokeUnit();
}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = beam1;
	}
	if( spray != 0 )
	{
		piecenum = beam2;
	}
	spray = !spray;
}

Demo()
{
	unitviewer = TRUE;
}

Activate()
{
	signal SIG_ACTIVATE;
	start-script RequestState(0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	if( !unitviewer )
	{
		sleep 5000;
	}
	set-signal-mask 0;
	start-script RequestState(1);
}

QueryBuildInfo(piecenum)
{
	piecenum = slip;
}

SweetSpot(piecenum)
{
	piecenum = piling1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode beam1 type NOHEATCLOUD;
		explode beam2 type NOHEATCLOUD;
		explode explode1 type NOHEATCLOUD;
		explode explode2 type NOHEATCLOUD;
		explode nano1 type NOHEATCLOUD;
		explode nano2 type NOHEATCLOUD;
		explode piling1 type NOHEATCLOUD;
		explode piling2 type NOHEATCLOUD;
		explode slip type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode beam1 type NOHEATCLOUD;
		explode beam2 type NOHEATCLOUD;
		explode explode1 type NOHEATCLOUD;
		explode explode2 type NOHEATCLOUD;
		explode nano1 type NOHEATCLOUD;
		explode nano2 type NOHEATCLOUD;
		explode piling1 type NOHEATCLOUD;
		explode piling2 type NOHEATCLOUD;
		explode slip type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode beam1 type NOHEATCLOUD;
	explode beam2 type NOHEATCLOUD;
	explode explode1 type NOHEATCLOUD;
	explode explode2 type NOHEATCLOUD;
	explode nano1 type NOHEATCLOUD;
	explode nano2 type NOHEATCLOUD;
	explode piling1 type NOHEATCLOUD;
	explode piling2 type NOHEATCLOUD;
	explode slip type NOHEATCLOUD;
	return (corpsetype);
}
