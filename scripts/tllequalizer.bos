#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret1, turret2, sleeve1, sleeve2, barrel1, barrel2,
       barrel3, barrel4, flare1, flare2, flare3, flare4, flare5, flare6,
       wake1, wake2, wake3;

static-var  gun_1, gun_2, bAiming, restore_delay;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			8


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	gun_1 = base;
	gun_2 = base;
	bAiming = FALSE;
	restore_delay = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret1 to y-axis <0.000000> speed <35.000000>;
	turn turret2 to y-axis <0.000000> speed <35.000000>;
	turn sleeve1 to x-axis <0.000000> speed <15.000000>;
	turn sleeve2 to x-axis <0.000000> speed <15.000000>;
	signal SIG_AIM;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = FALSE;
	turn turret1 to y-axis heading speed <60.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <35.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	bAiming = TRUE;
	turn turret2 to y-axis <180.000000> + heading speed <60.000000>;
	turn sleeve2 to x-axis pitch speed <35.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to z-axis [-1.000000] speed [500.000000];
		show flare1;
		sleep 150;
		hide flare1;
		move barrel1 to z-axis [0.000000] speed [3.000000];
		gun_1 = body;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move barrel2 to z-axis [-1.000000] speed [500.000000];
		show flare2;
		sleep 150;
		hide flare2;
		move barrel2 to z-axis [0.000000] speed [3.000000];
		gun_1 = base;
		return (0);
	}
}

FireSecondary()
{
	if( gun_2 == 0 )
	{
		move barrel3 to z-axis [1.000000] speed [500.000000];
		show flare3;
		sleep 150;
		hide flare3;
		move barrel3 to z-axis [0.000000] speed [3.000000];
		gun_2 = body;
		return (0);
	}
	if( gun_2 == 1 )
	{
		move barrel4 to z-axis [1.000000] speed [500.000000];
		show flare4;
		sleep 150;
		hide flare4;
		move barrel4 to z-axis [0.000000] speed [3.000000];
		gun_2 = base;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
}

AimFromSecondary(piecenum)
{
	piecenum = turret2;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare3;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare4;
	}
}

QueryWeapon3(piecenum)
{
	piecenum = flare5;
}

AimWeapon3(heading, pitch)
{
	return (1);
}

FireWeapon3()
{
	sleep 150;
}

QueryWeapon4(piecenum)
{
	piecenum = flare6;
}

AimWeapon4(heading, pitch)
{
	return (1);
}

FireWeapon4()
{
	sleep 150;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	hide flare5;
	hide flare6;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode barrel3 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD;
	explode turret2 type NOHEATCLOUD;
	explode turret1 type NOHEATCLOUD;
	explode wake1 type NOHEATCLOUD;
	explode wake2 type NOHEATCLOUD;
	explode flare1 type NOHEATCLOUD;
	explode flare3 type NOHEATCLOUD;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	explode turret1 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode sleeve2 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode turret2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode sleeve1 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (corpsetype);
	}
	corpsetype = 3;
	explode turret2 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode sleeve1 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
