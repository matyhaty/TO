#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, head, arms, belly, lthigh, lleg, rleg, flare1,
       flare2, pelvis, rthigh, lfoot, rfoot, ground;

static-var  restore_delay, gun_1;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4


walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
			move belly to y-axis [0.000000] now;
			move lthigh to y-axis [0.000000] now;
			move lleg to y-axis [0.600000] speed [3.986572];
			move rleg to y-axis [0.000000] now;
			move torso to y-axis [-0.400000] speed [2.657715];
			move arms to y-axis [0.000000] now;
			turn pelvis to z-axis <2.791209> speed <18.576923>;
			turn belly to x-axis <-6.000000> speed <39.862637>;
			turn rthigh to x-axis <14.390110> speed <95.648352>;
			turn lthigh to x-axis <-44.692308> speed <296.983516>;
			turn lleg to x-axis <-1.000000> speed <6.642857>;
			turn lfoot to x-axis <10.890110> speed <72.390110>;
			turn rleg to x-axis <6.291209> speed <41.835165>;
			turn rfoot to x-axis <-13.692308> speed <91.010989>;
			turn torso to x-axis <-0.291209> speed <1.967033>;
			sleep 130;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.600000] speed [3.986572];
			move lleg to y-axis [0.000000] speed [3.986572];
			move torso to y-axis [0.000000] speed [2.657715];
			turn pelvis to z-axis <6.692308> speed <25.917582>;
			turn belly to x-axis <-4.593407> speed <9.307692>;
			turn rthigh to x-axis <21.500000> speed <47.203297>;
			turn lthigh to x-axis <-23.890110> speed <138.214286>;
			turn lleg to x-axis <7.390110> speed <55.780220>;
			turn lfoot to x-axis <16.500000> speed <37.236264>;
			turn rleg to x-axis <12.692308> speed <42.527473>;
			turn rfoot to x-axis <-3.500000> speed <67.752747>;
			turn torso to x-axis <2.791209> speed <20.549451>;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <3.192308> speed <51.802198>;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <2.093407> speed <7.296703>;
			turn torso to x-axis <11.593407> speed <58.483516>;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.200000] speed [1.328857];
			move lthigh to y-axis [0.300000] speed [1.993286];
			move rleg to y-axis [0.500000] speed [3.322144];
			move torso to y-axis [-0.100000] speed [0.664429];
			turn pelvis to z-axis <5.291209> speed <9.307692>;
			turn belly to x-axis <0.000000> speed <13.945055>;
			turn rthigh to x-axis <14.093407> speed <49.170330>;
			turn lthigh to x-axis <-14.390110> speed <63.115385>;
			turn lfoot to x-axis <6.291209> speed <67.791209>;
			turn rleg to x-axis <8.093407> speed <30.554945>;
			turn rfoot to x-axis <-2.500000> speed <6.642857>;
			turn torso to x-axis <5.291209> speed <41.873626>;
			sleep 130;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.100000] speed [1.328857];
			move rleg to y-axis [0.800000] speed [1.993286];
			move torso to y-axis [-0.200000] speed [0.664429];
			turn pelvis to z-axis <3.500000> speed <11.934066>;
			turn belly to x-axis <5.291209> speed <35.192308>;
			turn rthigh to x-axis <3.500000> speed <70.417582>;
			turn lthigh to x-axis <-1.390110> speed <86.373626>;
			turn lfoot to x-axis <-6.000000> speed <81.697802>;
			turn torso to x-axis <3.192308> speed <13.945055>;
			sleep 120;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.000000] speed [0.664429];
			move torso to y-axis [-0.100000] speed [0.664429];
			turn pelvis to z-axis <0.000000> speed <23.252747>;
			turn belly to x-axis <2.500000> speed <18.576923>;
			turn rthigh to x-axis <-6.692308> speed <67.752747>;
			turn lthigh to x-axis <4.192308> speed <37.159341>;
			turn lfoot to x-axis <-11.593407> speed <37.197802>;
			turn torso to x-axis <8.093407> speed <32.560440>;
			sleep 110;
		}
		if( TRUE )
		{
			move rleg to y-axis [0.800000] now;
			move torso to y-axis [0.000000] speed [0.664429];
			turn pelvis to z-axis <-1.390110> speed <9.269231>;
			turn belly to x-axis <-3.890110> speed <42.489011>;
			turn rthigh to x-axis <-17.890110> speed <74.401099>;
			turn lthigh to x-axis <8.791209> speed <30.554945>;
			turn torso to x-axis <7.390110> speed <4.670330>;
			sleep 110;
		}
		if( TRUE )
		{
			move rleg to y-axis [0.100000] speed [4.651001];
			turn pelvis to z-axis <-2.791209> speed <9.307692>;
			turn belly to x-axis <-7.390110> speed <23.252747>;
			turn rthigh to x-axis <-36.890110> speed <126.236264>;
			turn lthigh to x-axis <15.791209> speed <46.505495>;
			turn lfoot to x-axis <-6.291209> speed <35.225275>;
			turn rleg to x-axis <-9.791209> speed <118.901099>;
			turn torso to x-axis <1.791209> speed <37.197802>;
			sleep 110;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.600000] speed [2.657715];
			move lleg to y-axis [0.400000] speed [2.657715];
			move torso to y-axis [-0.100000] speed [0.664429];
			turn pelvis to z-axis <-6.692308> speed <25.917582>;
			turn belly to x-axis <1.093407> speed <56.439560>;
			turn lthigh to x-axis <22.890110> speed <47.164835>;
			turn lfoot to x-axis <-2.791209> speed <23.252747>;
			turn rleg to x-axis <10.192308> speed <132.846154>;
			turn rfoot to x-axis <27.390110> speed <198.631868>;
			turn torso to x-axis <-2.500000> speed <28.543956>;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <13.000000> speed <79.071429>;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <9.093407> speed <25.917582>;
			turn torso to x-axis <8.390110> speed <72.390110>;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.300000] speed [1.993286];
			move lleg to y-axis [0.700000] speed [1.993286];
			move torso to y-axis [-0.100000] now;
			turn pelvis to z-axis <-5.291209> speed <9.307692>;
			turn belly to x-axis <7.000000> speed <13.945055>;
			turn rthigh to x-axis <-22.500000> speed <95.648352>;
			turn lthigh to x-axis <16.192308> speed <44.500000>;
			turn lfoot to x-axis <0.000000> speed <18.576923>;
			turn rfoot to x-axis <12.291209> speed <100.318681>;
			turn torso to x-axis <1.791209> speed <43.840659>;
			sleep 120;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.100000] speed [1.328857];
			move lleg to y-axis [1.000000] speed [1.993286];
			move torso to y-axis [-0.200000] speed [0.664429];
			turn pelvis to z-axis <-3.500000> speed <11.934066>;
			turn belly to x-axis <-3.192308> speed <67.752747>;
			turn rthigh to x-axis <-10.500000> speed <79.730769>;
			turn lthigh to x-axis <5.291209> speed <72.428571>;
			turn lfoot to x-axis <-0.692308> speed <4.631868>;
			turn rfoot to x-axis <0.291209> speed <79.730769>;
			turn torso to x-axis <-3.890110> speed <37.818681>;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.000000] speed [0.664429];
			move torso to y-axis [-0.300000] speed [0.664429];
			turn pelvis to z-axis <0.000000> speed <23.252747>;
			turn belly to x-axis <-4.192308> speed <6.642857>;
			turn rthigh to x-axis <0.692308> speed <74.401099>;
			turn lthigh to x-axis <-12.291209> speed <116.895604>;
			turn rfoot to x-axis <-11.593407> speed <79.032967>;
			turn torso to x-axis <-0.692308> speed <21.241758>;
			sleep 130;
		}
		move lleg to y-axis [0.900000] speed [0.664429];
		move torso to y-axis [-0.400000] speed [0.664429];
		turn pelvis to z-axis <1.390110> speed <9.269231>;
		turn belly to x-axis <-5.291209> speed <7.296703>;
		turn rthigh to x-axis <3.500000> speed <18.615385>;
		turn lthigh to x-axis <-23.192308> speed <72.428571>;
		turn torso to x-axis <0.692308> speed <9.269231>;
		sleep 130;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	turn pelvis to z-axis <0.000000> speed <150.000000>;
	turn belly to x-axis <0.000000> speed <150.000000>;
	move torso to y-axis [0.000000] speed [1.000000];
	turn torso to x-axis <0.000000> speed <150.000000>;
	turn rthigh to x-axis <0.000000> speed <150.000000>;
	turn rleg to x-axis <0.000000> speed <150.000000>;
	turn rfoot to x-axis <0.000000> speed <150.000000>;
	turn lthigh to x-axis <0.000000> speed <150.000000>;
	turn lleg to x-axis <0.000000> speed <150.000000>;
	turn lfoot to x-axis <0.000000> speed <150.000000>;
}

Create()
{
	hide flare1;
	hide flare2;
	gun_1 = torso;
	restore_delay = 3000;
	start-script StopMoving();

	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn torso to y-axis heading speed <90.000000>;
	turn arms to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		emit-sfx 1024 + 0 from flare1;
		sleep 150;
	}
	if( gun_1 == 1 )
	{
		emit-sfx 1024 + 0 from flare2;
		sleep 150;
	}
	gun_1 = !gun_1;
}

AimTertiary(heading, pitch)
{
	return (1);
}

FireTertiary()
{
	sleep 150;
}

AimFromTertiary(piecenum)
{
	piecenum = pelvis;
}

QueryTertiary(piecenum)
{
	piecenum = pelvis;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode belly type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD;
		explode ground type NOHEATCLOUD;
		explode arms type NOHEATCLOUD;
		explode head type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode belly type NOHEATCLOUD;
		explode ground type NOHEATCLOUD | FALL;
		explode arms type NOHEATCLOUD | FALL;
		explode head type NOHEATCLOUD | FALL;
		explode lfoot type NOHEATCLOUD | FALL;
		explode lleg type NOHEATCLOUD | FALL;
		explode lthigh type NOHEATCLOUD | SHATTER;
		explode pelvis type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode rleg type NOHEATCLOUD | FALL;
		explode rthigh type NOHEATCLOUD | SHATTER;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode belly type NOHEATCLOUD;
		explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode arms type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lthigh type NOHEATCLOUD | SHATTER;
		explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rthigh type NOHEATCLOUD | SHATTER;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode belly type NOHEATCLOUD;
	explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode arms type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lthigh type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rthigh type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD;
	return (corpsetype);
}
