#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, feetparent, FLFoot, FRFoot, RLFoot, RRFoot, rightchunk,
       leftchunk, door1, door2, doors, hips, platform, torp1, torp2,
       torp3, torp4;

static-var  Static_Var_1, Static_Var_2, bMoving, Static_Var_4, statechg_DesiredState,
            statechg_StateChanging, gun_1;

// Signal definitions
#define SIG_AIM				2


walk()
{
	if( bMoving )
	{
		move feetparent to z-axis [-0.900000] now;
		move FLFoot to x-axis [-0.900000] now;
		move FLFoot to y-axis [0.400000] now;
		move FLFoot to z-axis [0.000000] now;
		move FLFoot to z-axis [-0.400000] speed [2.400000];
		move FRFoot to x-axis [0.900000] now;
		move FRFoot to y-axis [0.400000] now;
		move FRFoot to z-axis [2.300000] now;
		move FRFoot to z-axis [3.500000] speed [7.600000];
		move RLFoot to x-axis [-0.900000] now;
		move RLFoot to y-axis [0.400000] now;
		move RLFoot to z-axis [-0.700000] now;
		move RLFoot to z-axis [-1.300000] speed [4.000000];
		move RRFoot to x-axis [0.900000] speed [4.895587];
		move RRFoot to y-axis [0.400000] speed [2.175824];
		move RRFoot to z-axis [-1.400000] now;
		move RRFoot to z-axis [-1.700000] speed [2.100000];
		move body to y-axis [1.300000] speed [7.071411];
		move body to z-axis [-0.300000] speed [1.631854];
		move rightchunk to x-axis [0.600000] speed [3.263733];
		move rightchunk to y-axis [1.300000] speed [7.071411];
		move rightchunk to z-axis [-0.300000] speed [1.631854];
		move leftchunk to x-axis [-0.600000] speed [3.263733];
		move leftchunk to y-axis [1.300000] speed [7.071411];
		move leftchunk to z-axis [-0.300000] speed [1.631854];
		turn hips to y-axis <-1.500000> now;
		turn hips to y-axis <3.791209> speed <32.390110>;
		turn FRFoot to x-axis <-17.890110> now;
		turn FRFoot to x-axis <-14.791209> speed <18.500000>;
		turn rightchunk to x-axis <-8.000000> now;
		turn rightchunk to x-axis <-11.390110> speed <20.791209>;
		sleep 164;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [1.500000] speed [11.200000];
		move FRFoot to z-axis [3.500000] speed [0.300000];
		move RLFoot to z-axis [-1.600000] speed [1.800000];
		move RRFoot to z-axis [-1.600000] speed [0.600000];
		turn hips to y-axis <2.291209> speed <9.192308>;
		turn FLFoot to x-axis <-12.890110> speed <78.291209>;
		turn FRFoot to x-axis <0.791209> speed <94.390110>;
		turn RRFoot to x-axis <9.890110> speed <59.890110>;
		turn body to x-axis <5.500000> speed <57.500000>;
		turn rightchunk to x-axis <-0.390110> speed <66.791209>;
		turn leftchunk to x-axis <-5.692308> speed <34.500000>;
		sleep 165;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [2.800000] speed [8.100000];
		move FRFoot to z-axis [2.500000] speed [5.700000];
		move RLFoot to z-axis [-2.100000] speed [2.700000];
		move RRFoot to z-axis [-1.600000] speed [0.300000];
		turn hips to y-axis <-1.890110> speed <25.192308>;
		turn FLFoot to x-axis <-30.390110> speed <105.291209>;
		turn RRFoot to x-axis <15.593407> speed <34.291209>;
		turn body to x-axis <8.390110> speed <29.692308>;
		turn rightchunk to x-axis <8.000000> speed <50.291209>;
		turn leftchunk to x-axis <-11.390110> speed <34.291209>;
		sleep 166;
	}
	if( bMoving )
	{
		move FRFoot to z-axis [2.300000] speed [1.200000];
		move RLFoot to z-axis [-2.500000] speed [2.400000];
		move RRFoot to z-axis [-0.600000] speed [6.100000];
		turn hips to y-axis <-2.291209> speed <2.291209>;
		turn FLFoot to x-axis <-19.000000> speed <69.093407>;
		turn RRFoot to x-axis <19.692308> speed <25.291209>;
		turn body to x-axis <2.291209> speed <73.692308>;
		turn rightchunk to x-axis <1.890110> speed <36.791209>;
		turn leftchunk to x-axis <-6.791209> speed <27.593407>;
		sleep 165;
	}
	if( bMoving )
	{
		move FRFoot to z-axis [1.700000] speed [3.600000];
		move RLFoot to z-axis [-3.200000] speed [4.500000];
		move RRFoot to z-axis [0.600000] speed [7.200000];
		turn hips to y-axis <-1.500000> speed <4.593407>;
		turn FLFoot to x-axis <-0.791209> speed <109.791209>;
		turn RRFoot to x-axis <7.593407> speed <73.192308>;
		turn body to x-axis <0.000000> speed <13.692308>;
		turn leftchunk to x-axis <0.000000> speed <41.192308>;
		sleep 166;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [2.000000] speed [5.200000];
		move FRFoot to z-axis [0.700000] speed [6.400000];
		move RRFoot to z-axis [0.300000] speed [2.100000];
		turn hips to y-axis <0.000000> speed <9.291209>;
		turn FLFoot to x-axis <0.000000> speed <4.593407>;
		turn RLFoot to x-axis <22.390110> speed <136.593407>;
		turn RRFoot to x-axis <0.791209> speed <41.692308>;
		turn body to x-axis <-2.291209> speed <13.890110>;
		turn leftchunk to x-axis <9.093407> speed <55.593407>;
		sleep 164;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [1.500000] speed [2.700000];
		move FRFoot to z-axis [0.100000] speed [3.600000];
		move RLFoot to z-axis [-1.800000] speed [8.700000];
		move RRFoot to z-axis [-0.200000] speed [2.700000];
		turn hips to y-axis <1.093407> speed <6.890110>;
		turn RLFoot to x-axis <28.890110> speed <38.890110>;
		turn body to x-axis <-1.093407> speed <6.890110>;
		turn leftchunk to x-axis <10.291209> speed <6.890110>;
		sleep 166;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [1.000000] speed [3.300000];
		move FRFoot to z-axis [-0.300000] speed [2.100000];
		move RLFoot to z-axis [-0.500000] speed [7.600000];
		move RRFoot to z-axis [-0.700000] speed [3.300000];
		turn hips to y-axis <-1.500000> speed <16.093407>;
		turn RLFoot to x-axis <10.291209> speed <112.791209>;
		turn body to x-axis <0.000000> speed <6.890110>;
		turn leftchunk to x-axis <2.692308> speed <46.000000>;
		sleep 165;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [0.800000] speed [0.900000];
		move FRFoot to z-axis [0.000000] speed [1.800000];
		move RLFoot to z-axis [0.400000] speed [5.400000];
		move RRFoot to z-axis [-0.900000] speed [1.200000];
		turn hips to y-axis <-1.890110> speed <2.291209>;
		turn FRFoot to x-axis <-10.291209> speed <66.390110>;
		turn RLFoot to x-axis <-0.390110> speed <64.093407>;
		turn rightchunk to x-axis <-1.093407> speed <18.291209>;
		turn leftchunk to x-axis <-2.692308> speed <32.000000>;
		sleep 166;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [0.400000] speed [2.700000];
		move FRFoot to z-axis [1.200000] speed [7.300000];
		move RLFoot to z-axis [-0.400000] speed [4.800000];
		move RRFoot to z-axis [-1.400000] speed [2.700000];
		turn hips to y-axis <-2.291209> speed <2.291209>;
		turn FRFoot to x-axis <-12.500000> speed <13.791209>;
		turn rightchunk to x-axis <-4.192308> speed <18.390110>;
		sleep 165;
	}
	sleep 166;
}

activatescr()
{
	if( TRUE )
	{
		turn doors to y-axis <-90.000000> speed <480.000000>;
		wait-for-turn doors around y-axis;
		wait-for-move door1 along z-axis;
	}
	if( TRUE )
	{
		move doors to y-axis [2.500000] speed [90.000000];
		move platform to y-axis [2.500000] speed [90.000000];
		wait-for-move platform along y-axis;
	}
	sleep 17;
}

deactivatescr()
{
	if( TRUE )
	{
		move doors to y-axis [0.000000] speed [15.000000];
		move platform to y-axis [0.000000] speed [15.000000];
		wait-for-move platform along y-axis;
	}
	if( TRUE )
	{
		sleep 500;
		wait-for-move door1 along z-axis;
		turn doors to y-axis <0.000000> speed <80.000000>;
		wait-for-turn doors around y-axis;
	}
	sleep 200;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 3;
			emit-sfx smoketype from base;
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	call-script activatescr();
	Static_Var_1 = 1;
}

Stop()
{
	Static_Var_1 = 0;
	call-script deactivatescr();
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walk();
		}
		if( !Func_Var_1 )
		{
			turn rightchunk to x-axis <0.000000> speed <150.000000>;
			turn RRFoot to x-axis <0.000000> speed <150.000000>;
			turn FRFoot to x-axis <0.000000> speed <150.000000>;
			turn leftchunk to x-axis <0.000000> speed <150.000000>;
			turn RLFoot to x-axis <0.000000> speed <150.000000>;
			turn FLFoot to x-axis <0.000000> speed <150.000000>;
			sleep 100;
		}
	}
}

Bubbles()
{
	while( Static_Var_4 >= 0 )
	{
		if( bMoving )
		{
			emit-sfx 256 | 3 from rightchunk;
			sleep 150;
			emit-sfx 256 | 3 from leftchunk;
		}
		sleep 3050;
	}
}

Create()
{
	bMoving = FALSE;
	Static_Var_1 = 0;
	Static_Var_4 = 0;
	Static_Var_2 = 10000;
	start-script SmokeUnit();
	start-script Bubbles();
	call-script InitState();
	start-script MotionControl();
}

setSFXoccupy(state)
{
	Static_Var_4 = state;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep Static_Var_2;
	set-signal-mask 0;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	++gun_1;
	if( gun_1 >= 4 )
	{
		gun_1 = base;
	}
	sleep 150;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = torp1;
	}
	if( gun_1 == 1 )
	{
		piecenum = torp2;
	}
	if( gun_1 == 2 )
	{
		piecenum = torp3;
	}
	if( gun_1 == 3 )
	{
		piecenum = torp4;
	}
}

Shot1()
{
	if( gun_1 == 1 )
	{
		sleep 300;
		turn platform to y-axis <-180.000000> speed <80.000000>;
		turn doors to y-axis <-180.000000> speed <80.000000>;
	}
	if( gun_1 == 3 )
	{
		sleep 300;
		turn platform to y-axis <0.000000> speed <80.000000>;
		turn doors to y-axis <0.000000> speed <80.000000>;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode FLFoot type NOHEATCLOUD;
		explode FRFoot type NOHEATCLOUD;
		explode leftchunk type NOHEATCLOUD;
		explode rightchunk type NOHEATCLOUD;
		explode RLFoot type NOHEATCLOUD;
		explode RRFoot type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode FLFoot type NOHEATCLOUD;
		explode FRFoot type NOHEATCLOUD;
		explode leftchunk type NOHEATCLOUD;
		explode rightchunk type NOHEATCLOUD;
		explode RLFoot type NOHEATCLOUD;
		explode RRFoot type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type NOHEATCLOUD | SHATTER;
		explode FLFoot type NOHEATCLOUD;
		explode FRFoot type NOHEATCLOUD;
		explode leftchunk type NOHEATCLOUD;
		explode rightchunk type NOHEATCLOUD;
		explode RLFoot type NOHEATCLOUD;
		explode RRFoot type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode FLFoot type NOHEATCLOUD;
	explode FRFoot type NOHEATCLOUD;
	explode leftchunk type NOHEATCLOUD;
	explode rightchunk type NOHEATCLOUD;
	explode RLFoot type NOHEATCLOUD;
	explode RRFoot type NOHEATCLOUD;
	return (corpsetype);
}
