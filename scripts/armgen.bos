#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, pipe, glow, metal, emit;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	Static_Var_2 = 1;
	cache glow;
	hide glow;
	show metal;
	dont-cache metal;
}

Stop()
{
	Static_Var_2 = 0;
	cache metal;
	hide metal;
	show glow;
	dont-cache glow;
}

MMStatus(Func_Var_1)
{
	Static_Var_3 = Func_Var_1;
}

ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	Static_Var_4 = -1;
	while( TRUE )
	{
		if( Static_Var_3 == 1 )
		{
			if( Static_Var_4 != 1 )
			{
				call-script Go();
				Static_Var_4 = 1;
			}
		}
		else if( Static_Var_4 != 0 )
		{
			call-script Stop();
			Static_Var_4 = 0;
		}
		sleep 1000;
	}
}

EffectWatch()
{
	while( TRUE )
	{
		while( Static_Var_2 == 1 )
		{
			emit-sfx 1024 + 0 from emit;
			sleep 1600;
		}
		sleep 333;
	}
}

Create()
{
	Static_Var_2 = 0;
	hide metal;
	dont-shade metal;
	dont-cache glow;
	start-script SmokeUnit();
	start-script ImAMetalMaker();
	start-script EffectWatch();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
