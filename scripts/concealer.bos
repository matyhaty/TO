#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, cockpit, leftpad, rightpad, leftbit, rightbit, jammerbase, jammerfork,
       engineleft, engineright, wake1, wake2, wake3, wake4, wake5, wake6,
       wake7, wake8;

static-var  Static_Var_1;

// Signal definitions
#define SIG_MOVE			4


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.000000>;
	turn base to z-axis anglez speed <50.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.000000>;
	turn base to x-axis anglex speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		if( ( Static_Var_1 == 2 OR Static_Var_1 ) == 1 )
		{
			emit-sfx 5 from wake1;
			emit-sfx 5 from wake2;
			emit-sfx 5 from wake3;
			emit-sfx 5 from wake4;
			emit-sfx 5 from wake5;
			emit-sfx 5 from wake6;
			emit-sfx 3 from wake7;
			emit-sfx 3 from wake8;
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
			emit-sfx 5 from wake7;
			emit-sfx 5 from wake8;
		}
		sleep 300;
	}
}

StopMoving()
{
}

setSFXoccupy(state)
{
	Static_Var_1 = state;
}

Create()
{
	hide wake1;
	hide wake2;
	hide wake3;
	hide wake4;
	hide wake5;
	hide wake6;
	hide wake7;
	hide wake8;
	start-script SmokeUnit();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	spin jammerfork around z-axis speed <60.005495>;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode cockpit type NOHEATCLOUD;
		explode leftpad type NOHEATCLOUD;
		explode rightpad type NOHEATCLOUD;
		explode leftbit type NOHEATCLOUD;
		explode rightbit type NOHEATCLOUD;
		explode jammerbase type NOHEATCLOUD;
		explode jammerfork type NOHEATCLOUD;
		explode engineleft type NOHEATCLOUD;
		explode engineright type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode cockpit type NOHEATCLOUD | FALL;
		explode leftpad type NOHEATCLOUD;
		explode rightpad type NOHEATCLOUD;
		explode leftbit type NOHEATCLOUD | FALL;
		explode rightbit type NOHEATCLOUD | FALL;
		explode jammerbase type NOHEATCLOUD | SHATTER;
		explode jammerfork type NOHEATCLOUD | SHATTER;
		explode engineleft type NOHEATCLOUD;
		explode engineright type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode cockpit type NOHEATCLOUD | FALL;
		explode leftpad type NOHEATCLOUD;
		explode rightpad type NOHEATCLOUD;
		explode leftbit type NOHEATCLOUD | FALL;
		explode rightbit type NOHEATCLOUD | FALL;
		explode jammerbase type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode jammerfork type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode engineleft type NOHEATCLOUD;
		explode engineright type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wake3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wake4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode cockpit type NOHEATCLOUD | FALL;
	explode leftpad type NOHEATCLOUD;
	explode rightpad type NOHEATCLOUD;
	explode leftbit type NOHEATCLOUD | FALL;
	explode rightbit type NOHEATCLOUD | FALL;
	explode jammerbase type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode jammerfork type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode engineleft type NOHEATCLOUD;
	explode engineright type NOHEATCLOUD;
	explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wake3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wake4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
