#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pelvis, rfireptu, rfireptd, lfireptu, lfireptd, lthigh, rthigh, torso,
       rleg, rfoot, lleg, lfoot, ground, rexhaust, lexhaust, turret;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4, gun_1,
            restore_delay, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_AIM				2


walk()
{
	if( TRUE )
	{
		move pelvis to y-axis [-0.500000] speed [4.267236];
		turn lthigh to x-axis <-62.934066> speed <537.104396>;
		turn rthigh to x-axis <3.505495> speed <29.917582>;
		turn torso to z-axis <-4.560440> speed <38.917582>;
		turn rleg to x-axis <82.978022> speed <708.170330>;
		turn rfoot to x-axis <-36.901099> speed <314.928571>;
		turn lleg to x-axis <57.302198> speed <489.043956>;
		turn lfoot to x-axis <5.258242> speed <44.873626>;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [2.981927];
		turn lthigh to x-axis <-51.681319> speed <134.214286>;
		turn rthigh to x-axis <-8.071429> speed <138.082418>;
		turn torso to z-axis <0.000000> speed <54.395604>;
		turn rleg to x-axis <105.835165> speed <272.631868>;
		turn rfoot to x-axis <-27.071429> speed <117.241758>;
		turn lleg to x-axis <45.346154> speed <142.604396>;
		turn lfoot to x-axis <5.967033> speed <8.450549>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.789154];
		turn lthigh to x-axis <-39.368132> speed <146.868132>;
		turn rthigh to x-axis <-20.027473> speed <142.604396>;
		turn rleg to x-axis <118.846154> speed <155.186813>;
		turn lleg to x-axis <38.670330> speed <79.626374>;
		turn lfoot to x-axis <1.049451> speed <58.653846>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] speed [1.192767];
		turn lthigh to x-axis <-29.170330> speed <121.631868>;
		turn rthigh to x-axis <-30.236264> speed <121.763736>;
		turn torso to z-axis <1.747253> speed <20.840659>;
		turn rleg to x-axis <72.769231> speed <549.587912>;
		turn rfoot to x-axis <-33.758242> speed <79.758242>;
		turn lleg to x-axis <29.868132> speed <104.989011>;
		turn lfoot to x-axis <-0.692308> speed <20.774725>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.192767];
		turn lthigh to x-axis <-20.390110> speed <104.725275>;
		turn rthigh to x-axis <-56.258242> speed <310.379121>;
		turn torso to z-axis <7.725275> speed <71.302198>;
		turn rleg to x-axis <58.357143> speed <171.901099>;
		turn lleg to x-axis <41.126374> speed <134.280220>;
		turn lfoot to x-axis <-21.093407> speed <243.335165>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [1.789154];
		turn lthigh to x-axis <-16.516484> speed <46.203297>;
		turn rthigh to x-axis <-57.659341> speed <16.708791>;
		turn torso to z-axis <9.835165> speed <25.164835>;
		turn rleg to x-axis <-10.192308> speed <817.637363>;
		turn lleg to x-axis <59.412088> speed <218.104396>;
		turn lfoot to x-axis <-31.637363> speed <125.763736>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.400000] speed [1.789154];
		turn lthigh to x-axis <-4.560440> speed <142.604396>;
		turn rthigh to x-axis <-65.401099> speed <92.340659>;
		turn torso to z-axis <10.192308> speed <4.258242>;
		turn rleg to x-axis <35.857143> speed <549.263736>;
		turn lleg to x-axis <53.434066> speed <71.302198>;
		turn lfoot to x-axis <-33.758242> speed <25.296703>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.500000] speed [1.192767];
		turn lthigh to x-axis <2.802198> speed <87.818681>;
		turn rthigh to x-axis <-66.445055> speed <12.450549>;
		turn torso to z-axis <7.027473> speed <37.747253>;
		turn rleg to x-axis <43.236264> speed <88.010989>;
		turn rfoot to x-axis <-7.725275> speed <310.510989>;
		turn lleg to x-axis <57.313187> speed <46.263736>;
		turn lfoot to x-axis <-29.527473> speed <50.461538>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.400000] speed [0.853442];
		turn lthigh to x-axis <5.269231> speed <21.049451>;
		turn rthigh to x-axis <-61.527473> speed <41.967033>;
		turn torso to z-axis <4.912088> speed <18.049451>;
		turn rleg to x-axis <44.648352> speed <12.049451>;
		turn rfoot to x-axis <16.868132> speed <209.890110>;
		turn lleg to x-axis <78.401099> speed <179.972527>;
		turn lfoot to x-axis <-34.791209> speed <44.923077>;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [1.789154];
		turn lthigh to x-axis <-4.912088> speed <121.439560>;
		turn rthigh to x-axis <-52.390110> speed <108.983516>;
		turn torso to z-axis <0.000000> speed <58.587912>;
		turn rleg to x-axis <43.236264> speed <16.840659>;
		turn rfoot to x-axis <9.137363> speed <92.208791>;
		turn lleg to x-axis <100.560440> speed <264.307692>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.789154];
		turn lthigh to x-axis <-21.445055> speed <197.197802>;
		turn rthigh to x-axis <-36.214286> speed <192.939560>;
		turn torso to z-axis <0.000000> now;
		turn rfoot to x-axis <-7.027473> speed <192.807692>;
		turn lleg to x-axis <103.725275> speed <37.747253>;
		turn lfoot to x-axis <-52.736264> speed <214.038462>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] speed [1.192767];
		turn lthigh to x-axis <-32.681319> speed <134.021978>;
		turn rthigh to x-axis <-21.791209> speed <172.032967>;
		turn torso to z-axis <-8.071429> speed <96.269231>;
		turn rleg to x-axis <38.670330> speed <54.456044>;
		turn rfoot to x-axis <-13.346154> speed <75.362637>;
		turn lleg to x-axis <84.736264> speed <226.494505>;
		turn lfoot to x-axis <-45.357143> speed <88.010989>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.192767];
		turn lthigh to x-axis <-68.912088> speed <432.148352>;
		turn rthigh to x-axis <-10.890110> speed <130.021978>;
		turn torso to z-axis <-10.192308> speed <25.296703>;
		turn rleg to x-axis <37.615385> speed <12.582418>;
		turn rfoot to x-axis <-21.445055> speed <96.598901>;
		turn lleg to x-axis <79.104396> speed <67.170330>;
		turn lfoot to x-axis <-37.967033> speed <88.142857>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [1.789154];
		turn lthigh to x-axis <-61.181319> speed <92.208791>;
		turn rthigh to x-axis <3.505495> speed <171.703297>;
		turn torso to z-axis <-8.769231> speed <16.972527>;
		turn rleg to x-axis <26.357143> speed <134.280220>;
		turn rfoot to x-axis <-22.846154> speed <16.708791>;
		turn lleg to x-axis <9.835165> speed <826.219780>;
		sleep 60;
	}
	move pelvis to y-axis [-0.400000] speed [1.789154];
	turn lthigh to x-axis <-63.291209> speed <25.164835>;
	turn rthigh to x-axis <17.214286> speed <163.510989>;
	turn torso to z-axis <-7.027473> speed <20.774725>;
	turn rleg to x-axis <29.170330> speed <33.549451>;
	turn rfoot to x-axis <-21.093407> speed <20.901099>;
	turn lleg to x-axis <28.824176> speed <226.494505>;
	turn lfoot to x-axis <-1.390110> speed <436.274725>;
	sleep 60;
}

walklegs()
{
	if( TRUE )
	{
		move pelvis to y-axis [-0.500000] speed [0.853442];
		turn lthigh to x-axis <-62.934066> speed <3.043956>;
		turn rthigh to x-axis <3.505495> speed <116.994505>;
		turn rleg to x-axis <82.978022> speed <459.219780>;
		turn rfoot to x-axis <-36.901099> speed <134.906593>;
		turn lleg to x-axis <57.302198> speed <243.043956>;
		turn lfoot to x-axis <5.258242> speed <56.736264>;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [2.981927];
		turn lthigh to x-axis <-51.681319> speed <134.214286>;
		turn rthigh to x-axis <-8.071429> speed <138.082418>;
		turn rleg to x-axis <105.835165> speed <272.631868>;
		turn rfoot to x-axis <-27.071429> speed <117.241758>;
		turn lleg to x-axis <45.346154> speed <142.604396>;
		turn lfoot to x-axis <5.967033> speed <8.450549>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.789154];
		turn lthigh to x-axis <-39.368132> speed <146.868132>;
		turn rthigh to x-axis <-20.027473> speed <142.604396>;
		turn rleg to x-axis <118.846154> speed <155.186813>;
		turn lleg to x-axis <38.670330> speed <79.626374>;
		turn lfoot to x-axis <1.049451> speed <58.653846>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] speed [1.192767];
		turn lthigh to x-axis <-29.170330> speed <121.631868>;
		turn rthigh to x-axis <-30.236264> speed <121.763736>;
		turn rleg to x-axis <72.769231> speed <549.587912>;
		turn rfoot to x-axis <-33.758242> speed <79.758242>;
		turn lleg to x-axis <29.868132> speed <104.989011>;
		turn lfoot to x-axis <-0.692308> speed <20.774725>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.192767];
		turn lthigh to x-axis <-20.390110> speed <104.725275>;
		turn rthigh to x-axis <-56.258242> speed <310.379121>;
		turn rleg to x-axis <58.357143> speed <171.901099>;
		turn lleg to x-axis <41.126374> speed <134.280220>;
		turn lfoot to x-axis <-21.093407> speed <243.335165>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [1.789154];
		turn lthigh to x-axis <-16.516484> speed <46.203297>;
		turn rthigh to x-axis <-57.659341> speed <16.708791>;
		turn rleg to x-axis <-10.192308> speed <817.637363>;
		turn lleg to x-axis <59.412088> speed <218.104396>;
		turn lfoot to x-axis <-31.637363> speed <125.763736>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.400000] speed [1.789154];
		turn lthigh to x-axis <-4.560440> speed <142.604396>;
		turn rthigh to x-axis <-65.401099> speed <92.340659>;
		turn rleg to x-axis <35.857143> speed <549.263736>;
		turn lleg to x-axis <53.434066> speed <71.302198>;
		turn lfoot to x-axis <-33.758242> speed <25.296703>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.500000] speed [1.192767];
		turn lthigh to x-axis <2.802198> speed <87.818681>;
		turn rthigh to x-axis <-66.445055> speed <12.450549>;
		turn rleg to x-axis <43.236264> speed <88.010989>;
		turn rfoot to x-axis <-7.725275> speed <310.510989>;
		turn lleg to x-axis <57.313187> speed <46.263736>;
		turn lfoot to x-axis <-29.527473> speed <50.461538>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.400000] speed [0.853442];
		turn lthigh to x-axis <5.269231> speed <21.049451>;
		turn rthigh to x-axis <-61.527473> speed <41.967033>;
		turn rleg to x-axis <44.648352> speed <12.049451>;
		turn rfoot to x-axis <16.868132> speed <209.890110>;
		turn lleg to x-axis <78.401099> speed <179.972527>;
		turn lfoot to x-axis <-34.791209> speed <44.923077>;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [1.789154];
		turn lthigh to x-axis <-4.912088> speed <121.439560>;
		turn rthigh to x-axis <-52.390110> speed <108.983516>;
		turn rleg to x-axis <43.236264> speed <16.840659>;
		turn rfoot to x-axis <9.137363> speed <92.208791>;
		turn lleg to x-axis <100.560440> speed <264.307692>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.789154];
		turn lthigh to x-axis <-21.445055> speed <197.197802>;
		turn rthigh to x-axis <-36.214286> speed <192.939560>;
		turn rfoot to x-axis <-7.027473> speed <192.807692>;
		turn lleg to x-axis <103.725275> speed <37.747253>;
		turn lfoot to x-axis <-52.736264> speed <214.038462>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] speed [1.192767];
		turn lthigh to x-axis <-32.681319> speed <134.021978>;
		turn rthigh to x-axis <-21.791209> speed <172.032967>;
		turn rleg to x-axis <38.670330> speed <54.456044>;
		turn rfoot to x-axis <-13.346154> speed <75.362637>;
		turn lleg to x-axis <84.736264> speed <226.494505>;
		turn lfoot to x-axis <-45.357143> speed <88.010989>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.100000] speed [1.192767];
		turn lthigh to x-axis <-68.912088> speed <432.148352>;
		turn rthigh to x-axis <-10.890110> speed <130.021978>;
		turn rleg to x-axis <37.615385> speed <12.582418>;
		turn rfoot to x-axis <-21.445055> speed <96.598901>;
		turn lleg to x-axis <79.104396> speed <67.170330>;
		turn lfoot to x-axis <-37.967033> speed <88.142857>;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.250000] speed [1.789154];
		turn lthigh to x-axis <-61.181319> speed <92.208791>;
		turn rthigh to x-axis <3.505495> speed <171.703297>;
		turn rleg to x-axis <26.357143> speed <134.280220>;
		turn rfoot to x-axis <-22.846154> speed <16.708791>;
		turn lleg to x-axis <9.835165> speed <826.219780>;
		sleep 60;
	}
	move pelvis to y-axis [-0.400000] speed [1.789154];
	turn lthigh to x-axis <-63.291209> speed <25.164835>;
	turn rthigh to x-axis <17.214286> speed <163.510989>;
	turn rleg to x-axis <29.170330> speed <33.549451>;
	turn rfoot to x-axis <-21.093407> speed <20.901099>;
	turn lleg to x-axis <28.824176> speed <226.494505>;
	turn lfoot to x-axis <-1.390110> speed <436.274725>;
	sleep 60;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	Static_Var_2 = 1;
	if( !Static_Var_4 )
	{
		while( !Static_Var_3 )
		{
			sleep 150;
		}
		sleep 200;
		Static_Var_4 = 1;
	}
}

Stop()
{
	if( Static_Var_4 )
	{
		Static_Var_4 = 0;
		sleep 229;
	}
	Static_Var_2 = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	gun_1 = pelvis;
	restore_delay = 3000;
	call-script InitState();
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn torso to y-axis <0.000000> speed <90.000000>;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_4 )
	{
		sleep 350;
	}
	turn torso to y-axis heading speed <90.000000>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = pelvis;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = lfireptu;
	}
	if( gun_1 == 1 )
	{
		piecenum = rfireptu;
	}
	if( gun_1 == 2 )
	{
		piecenum = lfireptd;
	}
	if( gun_1 == 3 )
	{
		piecenum = rfireptd;
	}
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		gun_1 = rfireptu;
		emit-sfx 1024 + 0 from lexhaust;
		return (0);
	}
	if( gun_1 == 1 )
	{
		gun_1 = rfireptd;
		emit-sfx 1024 + 0 from rexhaust;
		return (0);
	}
	if( gun_1 == 2 )
	{
		gun_1 = lfireptu;
		emit-sfx 1024 + 0 from lexhaust;
		return (0);
	}
	if( gun_1 == 3 )
	{
		gun_1 = pelvis;
		emit-sfx 1024 + 0 from rexhaust;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type NOHEATCLOUD | FALL;
		explode lfoot type NOHEATCLOUD | FALL;
		explode lleg type NOHEATCLOUD | FALL;
		explode lthigh type NOHEATCLOUD | FALL;
		explode pelvis type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode rleg type NOHEATCLOUD | FALL;
		explode rthigh type NOHEATCLOUD | FALL;
		explode torso type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
