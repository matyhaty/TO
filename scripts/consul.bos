#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, rnanopoint, lnanopoint, rpinza, lpinza, rfwheel, rrwheel,
       lfwheel, lrwheel, nanopoint;

static-var  Static_Var_1, Static_Var_2, statechg_DesiredState, statechg_StateChanging, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9;


TurnControl(Func_Var_1, Func_Var_2, Func_Var_3)
{
	Func_Var_1 = get HEADING;
	while( TRUE )
	{
		Func_Var_2 = get HEADING;
		Func_Var_3 = Func_Var_2 - Func_Var_1;
		Static_Var_5 = 2;
		Static_Var_6 = 2;
		if( Func_Var_3 >= 500 )
		{
			Static_Var_5 = 1;
		}
		if( Func_Var_3 <= -500 )
		{
			Static_Var_6 = 1;
		}
		Func_Var_1 = Func_Var_2;
		sleep 67;
	}
}

WheelControl()
{
	sleep 33;
	while( TRUE )
	{
		Static_Var_8 = get CURRENT_SPEED * 20 / Static_Var_9;
		Static_Var_7 = Static_Var_8 * 6;
		if( Static_Var_8 < 4 )
		{
			Static_Var_8 = 4;
		}
		spin lfwheel around x-axis speed <1.000000> * Static_Var_7 * Static_Var_5 accelerate <3.000000> * Static_Var_8;
		spin lrwheel around x-axis speed <1.000000> * Static_Var_7 * Static_Var_5 accelerate <3.000000> * Static_Var_8;
		spin rfwheel around x-axis speed <1.000000> * Static_Var_7 * Static_Var_6 accelerate <3.000000> * Static_Var_8;
		spin rrwheel around x-axis speed <1.000000> * Static_Var_7 * Static_Var_6 accelerate <3.000000> * Static_Var_8;
		sleep 67;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script WheelControl();
	start-script TurnControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.000000>;
	turn base to x-axis anglex speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;
}

Go()
{
	if( TRUE )
	{
		turn rpinza to y-axis <-13.000000> speed <30.000000>;
		turn lpinza to y-axis <13.000000> speed <30.000000>;
		wait-for-turn rpinza around y-axis;
		wait-for-turn lpinza around y-axis;
		sleep 50;
	}
	sleep 50;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	if( TRUE )
	{
		turn rpinza to y-axis <0.000000> speed <30.000000>;
		turn lpinza to y-axis <0.000000> speed <30.000000>;
		wait-for-turn rpinza around y-axis;
		wait-for-turn lpinza around y-axis;
		sleep 50;
	}
	sleep 50;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	Static_Var_9 = get MAX_SPEED;
	Static_Var_2 = 0;
	call-script InitState();
	start-script SmokeUnit();
}

StartMoving()
{
	sleep 1;
}

StopMoving()
{
	sleep 1;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanopoint;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_2 = Func_Var_1;
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode rpinza type NOHEATCLOUD;
		explode rrwheel type NOHEATCLOUD | SHATTER | SMOKE | EXPLODE_ON_HIT;
		explode lfwheel type NOHEATCLOUD | SHATTER | SMOKE | EXPLODE_ON_HIT;
		explode rfwheel type NOHEATCLOUD | SHATTER | SMOKE | EXPLODE_ON_HIT;
		explode lrwheel type NOHEATCLOUD | SHATTER | SMOKE | EXPLODE_ON_HIT;
		explode lpinza type NOHEATCLOUD;
		explode rnanopoint type NOHEATCLOUD | SHATTER | SMOKE;
		explode lnanopoint type NOHEATCLOUD | SHATTER | SMOKE;
		explode nanopoint type NOHEATCLOUD | SHATTER | SMOKE;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode rpinza type NOHEATCLOUD;
		explode rrwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lrwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lpinza type NOHEATCLOUD;
		explode rnanopoint type NOHEATCLOUD | SHATTER | SMOKE;
		explode lnanopoint type NOHEATCLOUD | SHATTER | SMOKE;
		explode nanopoint type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode rpinza type NOHEATCLOUD;
		explode rrwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lrwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lpinza type NOHEATCLOUD;
		explode rnanopoint type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
		explode lnanopoint type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
		explode nanopoint type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode body type NOHEATCLOUD;
	explode rpinza type NOHEATCLOUD;
	explode rrwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lrwheel type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lpinza type NOHEATCLOUD;
	explode rnanopoint type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
	explode lnanopoint type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
	explode nanopoint type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
	return (corpsetype);
}
