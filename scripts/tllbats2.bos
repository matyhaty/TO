#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, turret1, sleeve1, barrel1, flare1, barrel2, flare2,
       turret2, sleeve2, barrel, flare, wake1, wake2, wake3;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			8


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare;
	hide flare1;
	hide flare2;
	hide wake1;
	hide wake2;
	hide wake3;
	gun_1 = hull;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		sleep 150;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

RestoreAfterDelay1()
{
	sleep 3000;
	turn turret1 to y-axis <0.000000> speed <50.000000>;
	turn sleeve1 to x-axis <0.000000> speed <50.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
}

RestoreAfterDelay2()
{
	sleep 3000;
	turn turret2 to y-axis <0.000000> speed <50.000000>;
	turn sleeve2 to x-axis <0.000000> speed <50.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn sleeve1 to x-axis <0.000000> - pitch speed <50.000000>;
	turn turret1 to y-axis heading speed <55.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay1();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	if( heading > 27300 AND heading < 38220 )
	{
		start-script RestoreAfterDelay2();
		return (0);
	}
	turn turret2 to y-axis heading speed <55.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <30.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		show flare1;
		move barrel1 to z-axis [-2.000000] speed [500.000000];
		sleep 150;
		hide flare1;
		move barrel1 to z-axis [0.000000] speed [5.000000];
		gun_1 = turret1;
		return (0);
	}
	if( gun_1 == 2 )
	{
		show flare2;
		move barrel2 to z-axis [-2.000000] speed [500.000000];
		sleep 150;
		hide flare2;
		move barrel2 to z-axis [0.000000] speed [5.000000];
		gun_1 = hull;
		return (0);
	}
}

FireSecondary()
{
	move barrel to z-axis [-1.000000] speed [500.000000];
	wait-for-move barrel along z-axis;
	move barrel to z-axis [0.000000] speed [3.000000];
	show flare;
	sleep 150;
	hide flare;
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
}

QuerySecondary(piecenum)
{
	piecenum = flare;
}

AimFromSecondary(piecenum)
{
	piecenum = turret2;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare2;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD;
		explode flare2 type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode sleeve1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD;
		explode wake2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD;
		explode flare type NOHEATCLOUD | FALL;
		explode flare1 type NOHEATCLOUD | FALL;
		explode flare2 type NOHEATCLOUD | FALL;
		explode sleeve1 type NOHEATCLOUD | FALL;
		explode hull type NOHEATCLOUD | SHATTER;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD | FALL;
		explode wake2 type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode flare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode hull type NOHEATCLOUD | SHATTER;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode flare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode hull type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret1 type NOHEATCLOUD;
	explode turret2 type NOHEATCLOUD;
	explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
