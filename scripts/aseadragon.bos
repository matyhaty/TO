#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, wake1, wake2, wake3, wake4, wake5, ponton,
       tur1, tur2, tur3, tur4, tur5, flaktur1, flaktur2, sleeve1,
       sleeve2, sleeve3, sleeve4, sleeve5, flaksleeve1, flaksleeve2, barrel1a, barrel1b,
       barrel2a, barrel2b, barrel2c, barrel3a, barrel3b, barrel4a, barrel4b, barrel4c,
       barrel5a, barrel5b, barrel5c, flakbarrel1a, flakbarrel1b, flakbarrel2a, flakbarrel2b, flare1a,
       flare1b, flare2a, flare2b, flare2c, flare3a, flare3b, flare4a, flare4b,
       flare4c, flare5a, flare5b, flare5c, flakflare1a, flakflare1b, flakflare2a, flakflare2b;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, restore_delay, Static_Var_9, Static_Var_10;

// Signal definitions
#define SIG_MOVE			256


SetDirection(heading)
{
	var Func_Var_2;
	Func_Var_2 = ( get ABS(Static_Var_9) - get ABS(heading) ) / 2;
	turn base to y-axis heading speed Func_Var_2;
	turn body to y-axis <0.000000> - heading speed Func_Var_2;
	Static_Var_9 = heading;
}

RockOnWaves(Func_Var_1, Func_Var_2, Func_Var_3)
{
	Func_Var_1 = -18;
	Func_Var_2 = -18;
	while( TRUE )
	{
		while( get ABS(Func_Var_2) < 202 )
		{
			Func_Var_3 = 227 - get ABS(Func_Var_2);
			turn base to x-axis Func_Var_2 speed Func_Var_3 * <0.005495>;
			wait-for-turn base around x-axis;
			Func_Var_2 = Func_Var_2 + Func_Var_1;
		}
		Func_Var_1 = 0 - Func_Var_1;
		Func_Var_2 = Func_Var_2 + Func_Var_1 + Func_Var_1;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script RockOnWaves();
	var Func_Var_4;
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from body;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from tur1;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from ponton;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1a;
	hide flare2a;
	hide flare3a;
	hide flare4a;
	hide flare5a;
	hide flare1b;
	hide flare2b;
	hide flare3b;
	hide flare4b;
	hide flare5b;
	hide flare2c;
	hide flare4c;
	hide flare5c;
	Static_Var_10 = get MAX_SPEED;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	restore_delay = 6000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay2()
{
	sleep restore_delay;
	turn tur2 to y-axis <0.000000> speed <50.000000>;
	turn sleeve2 to x-axis <0.000000> speed <30.000000>;
	turn tur4 to y-axis <0.000000> speed <50.000000>;
	turn sleeve4 to x-axis <0.000000> speed <30.000000>;
	turn tur5 to y-axis <0.000000> speed <50.000000>;
	turn sleeve5 to x-axis <0.000000> speed <30.000000>;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn tur1 to y-axis <0.000000> speed <10.000000>;
	turn sleeve1 to x-axis <0.000000> speed <10.000000>;
	turn tur3 to y-axis <0.000000> speed <10.000000>;
	turn sleeve3 to x-axis <0.000000> speed <10.000000>;
}

RestoreAfterDelay3()
{
	sleep restore_delay;
	turn flaktur1 to y-axis <0.000000> speed <80.000000>;
	turn flaksleeve1 to x-axis <0.000000> speed <50.000000>;
	turn flaktur2 to y-axis <0.000000> speed <80.000000>;
	turn flaksleeve2 to x-axis <0.000000> speed <50.000000>;
}

waveSplash()
{
	while( TRUE )
	{
		turn body to x-axis <-1.000000> speed <1.000000>;
		move body to y-axis [0.229999] speed [0.169989];
		wait-for-turn body around x-axis;
		turn body to x-axis <0.000000> speed <1.000000>;
		move body to y-axis [0.000000] speed [0.169989];
		wait-for-turn body around x-axis;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	var Func_Var_1;
	start-script waveSplash();
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		emit-sfx 2 from wake5;
		Func_Var_1 = get CURRENT_SPEED * 100 / Static_Var_10;
		if( Func_Var_1 < 50 )
		{
			Func_Var_1 = 50;
		}
		sleep 12000 / Func_Var_1;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	turn body to x-axis <0.000000> speed <1.000000>;
	move body to y-axis [0.000000] speed [0.169989];
}

AimWeapon1(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn tur1 to y-axis heading speed <50.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( Static_Var_1 )
	{
		move barrel1b to z-axis [-3.000000] speed [500.000000];
		show flare1b;
		sleep 150;
		move barrel1b to z-axis [0.000000] speed [3.000000];
		hide flare1b;
	}
	else
	{
		move barrel1a to z-axis [-3.000000] speed [500.000000];
		show flare1a;
		sleep 150;
		move barrel1a to z-axis [0.000000] speed [3.000000];
		hide flare1a;
	}
	Static_Var_1 = !Static_Var_1;
}

AimFromWeapon1(piecenum)
{
	piecenum = tur1;
}

QueryWeapon1(piecenum)
{
	piecenum = 39 + Static_Var_1;
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn tur2 to y-axis heading speed <90.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon2()
{
	if( Static_Var_2 == 0 )
	{
		move barrel2a to z-axis [-1.000000] speed [500.000000];
		show flare2a;
		sleep 150;
		move barrel2a to z-axis [0.000000] speed [3.000000];
		hide flare2a;
	}
	else if( Static_Var_2 == 1 )
	{
		move barrel2b to z-axis [-1.000000] speed [500.000000];
		show flare2b;
		sleep 150;
		move barrel2b to z-axis [0.000000] speed [3.000000];
		hide flare2b;
	}
	else
	{
		move barrel2c to z-axis [-1.000000] speed [500.000000];
		show flare2c;
		sleep 150;
		move barrel2c to z-axis [0.000000] speed [3.000000];
		hide flare2c;
	}
	++Static_Var_2;
	if( Static_Var_2 >= 3 )
	{
		Static_Var_2 = 0;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = tur2;
}

QueryWeapon2(piecenum)
{
	piecenum = 41 + Static_Var_2;
}

AimWeapon3(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn tur3 to y-axis heading speed <50.000000>;
	turn sleeve3 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon3()
{
	if( Static_Var_3 )
	{
		move barrel3b to z-axis [-3.000000] speed [500.000000];
		show flare3b;
		sleep 150;
		move barrel3b to z-axis [0.000000] speed [3.000000];
		hide flare3b;
	}
	else
	{
		move barrel3a to z-axis [-3.000000] speed [500.000000];
		show flare3a;
		sleep 150;
		move barrel3a to z-axis [0.000000] speed [3.000000];
		hide flare3a;
	}
	Static_Var_3 = !Static_Var_3;
}

AimFromWeapon3(piecenum)
{
	piecenum = tur3;
}

QueryWeapon3(piecenum)
{
	piecenum = 44 + Static_Var_3;
}

AimWeapon4(heading, pitch)
{
	signal 16;
	set-signal-mask 16;
	turn tur4 to y-axis heading speed <90.000000>;
	turn sleeve4 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon4()
{
	if( Static_Var_4 == 0 )
	{
		move barrel4a to z-axis [-1.000000] speed [500.000000];
		show flare4a;
		sleep 150;
		move barrel4a to z-axis [0.000000] speed [3.000000];
		hide flare4a;
	}
	else if( Static_Var_4 == 1 )
	{
		move barrel4b to z-axis [-1.000000] speed [500.000000];
		show flare4b;
		sleep 150;
		move barrel4b to z-axis [0.000000] speed [3.000000];
		hide flare4b;
	}
	else
	{
		move barrel4c to z-axis [-1.000000] speed [500.000000];
		show flare4c;
		sleep 150;
		move barrel4c to z-axis [0.000000] speed [3.000000];
		hide flare4c;
	}
	++Static_Var_4;
	if( Static_Var_4 >= 3 )
	{
		Static_Var_4 = 0;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = tur4;
}

QueryWeapon4(piecenum)
{
	piecenum = 46 + Static_Var_4;
}

AimWeapon5(heading, pitch)
{
	signal 32;
	set-signal-mask 32;
	turn tur5 to y-axis heading speed <90.000000>;
	turn sleeve5 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur5 around y-axis;
	wait-for-turn sleeve5 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon5()
{
	if( Static_Var_5 == 0 )
	{
		move barrel5a to z-axis [-1.000000] speed [500.000000];
		show flare5a;
		sleep 150;
		move barrel5a to z-axis [0.000000] speed [3.000000];
		hide flare5a;
	}
	else if( Static_Var_5 == 1 )
	{
		move barrel5b to z-axis [-1.000000] speed [500.000000];
		show flare5b;
		sleep 150;
		move barrel5b to z-axis [0.000000] speed [3.000000];
		hide flare5b;
	}
	else
	{
		move barrel5c to z-axis [-1.000000] speed [500.000000];
		show flare5c;
		sleep 150;
		move barrel5c to z-axis [0.000000] speed [3.000000];
		hide flare5c;
	}
	++Static_Var_5;
	if( Static_Var_5 >= 3 )
	{
		Static_Var_5 = 0;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = tur5;
}

QueryWeapon5(piecenum)
{
	piecenum = 49 + Static_Var_5;
}

AimWeapon6(heading, pitch)
{
	signal 64;
	set-signal-mask 64;
	turn flaktur1 to y-axis heading speed <250.000000>;
	turn flaksleeve1 to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn flaktur1 around y-axis;
	wait-for-turn flaksleeve1 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

FireWeapon6()
{
	if( Static_Var_6 )
	{
		move flakbarrel1b to z-axis [-1.000000] speed [500.000000];
		show flakflare1b;
		sleep 150;
		move flakbarrel1b to z-axis [0.000000] speed [3.000000];
		hide flakflare1b;
	}
	else
	{
		move flakbarrel1a to z-axis [-1.000000] speed [500.000000];
		show flakflare1a;
		sleep 150;
		move flakbarrel1a to z-axis [0.000000] speed [3.000000];
		hide flakflare1a;
	}
	Static_Var_6 = !Static_Var_6;
}

AimFromWeapon6(piecenum)
{
	piecenum = flaktur1;
}

QueryWeapon6(piecenum)
{
	piecenum = 52 + Static_Var_6;
}

AimWeapon7(heading, pitch)
{
	signal 128;
	set-signal-mask 128;
	turn flaktur2 to y-axis heading speed <250.000000>;
	turn flaksleeve2 to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn flaktur2 around y-axis;
	wait-for-turn flaksleeve2 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

FireWeapon7()
{
	if( Static_Var_7 )
	{
		move flakbarrel2b to z-axis [-1.000000] speed [500.000000];
		show flakflare2b;
		sleep 150;
		move flakbarrel2b to z-axis [0.000000] speed [3.000000];
		hide flakflare2b;
	}
	else
	{
		move flakbarrel2a to z-axis [-1.000000] speed [500.000000];
		show flakflare2a;
		sleep 150;
		move flakbarrel2a to z-axis [0.000000] speed [3.000000];
		hide flakflare2a;
	}
	Static_Var_7 = !Static_Var_7;
}

AimFromWeapon7(piecenum)
{
	piecenum = flaktur2;
}

QueryWeapon7(piecenum)
{
	piecenum = 54 + Static_Var_7;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1a type NOHEATCLOUD;
		explode barrel2b type NOHEATCLOUD;
		explode barrel5a type NOHEATCLOUD;
		explode barrel3a type NOHEATCLOUD;
		explode barrel1b type NOHEATCLOUD;
		explode tur1 type NOHEATCLOUD;
		explode tur2 type NOHEATCLOUD;
		explode ponton type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode tur3 type NOHEATCLOUD;
		explode flaktur1 type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD;
		explode wake2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1a type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel3b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel5c type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel5b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel1b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel2b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode tur1 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode tur2 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode tur3 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode tur4 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode ponton type NOHEATCLOUD | SHATTER;
		explode wake1 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel5a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel3b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel5c type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode tur1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode tur2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode tur3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode tur4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode ponton type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode tur5 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel3a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel4c type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel5c type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel3b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode tur2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode tur1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode tur3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
