#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, wheel1, loader, turret, launcher, rocket1, rocket2, rocket3,
       rocket4, rocket5, rocket6, smokybit1, smokybit2, smokybit3, smokybit4, smokybit5,
       smokybit6, wheel2, wheel3, wheel4, door1, door2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

HitByWeapon(anglex, anglez)
{
	Static_Var_6 = get HEALTH;
	if( Static_Var_6 <= Static_Var_7 - 2 )
	{
		turn base to z-axis anglez speed <105.000000>;
		turn base to x-axis anglex speed <105.000000>;
		wait-for-turn base around z-axis;
		wait-for-turn base around x-axis;
		turn base to z-axis <0.000000> speed <30.000000>;
		turn base to x-axis <0.000000> speed <30.000000>;
	}
	Static_Var_7 = get HEALTH;
}

StartMoving()
{
	spin wheel1 around x-axis speed <80.000000> accelerate <15.000000>;
	spin wheel2 around x-axis speed <80.000000> accelerate <15.000000>;
	spin wheel3 around x-axis speed <80.000000> accelerate <15.000000>;
	spin wheel4 around x-axis speed <80.000000> accelerate <15.000000>;
}

StopMoving()
{
	stop-spin wheel1 around x-axis;
	stop-spin wheel2 around x-axis;
	stop-spin wheel3 around x-axis;
	stop-spin wheel4 around x-axis;
}

Create()
{
	Static_Var_1 = 2000;
	Static_Var_3 = 0;
	Static_Var_2 = 0;
	Static_Var_7 = 100;
	Static_Var_5 = 0;
	Static_Var_4 = 1;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
}

Reload()
{
	Static_Var_2 = 0;
	turn turret to y-axis <0.000000> speed <120.000000>;
	wait-for-turn turret around y-axis;
	turn launcher to x-axis <0.000000> speed <90.000000>;
	wait-for-turn launcher around x-axis;
	move loader to y-axis [0.000000] speed [10.000000];
	sleep 1000;
	move door1 to y-axis [0.000000] speed [30.000000];
	move door2 to y-axis [0.000000] speed [30.000000];
	wait-for-move door2 along y-axis;
	turn door1 to z-axis <0.000000> speed <60.000000>;
	turn door2 to z-axis <0.000000> speed <60.000000>;
	wait-for-turn door2 around z-axis;
	Static_Var_5 = 1;
	show rocket1;
	show rocket2;
	show rocket3;
	show rocket4;
	show rocket5;
	show rocket6;
	sleep 1000;
	Static_Var_3 = 0;
	Static_Var_5 = 0;
	Static_Var_4 = 1;
}

Launch()
{
	turn door1 to z-axis <90.000000> speed <60.000000>;
	turn door2 to z-axis <-90.000000> speed <60.000000>;
	wait-for-turn door2 around z-axis;
	move door1 to y-axis [-7.000000] speed [30.000000];
	move door2 to y-axis [-7.000000] speed [30.000000];
	sleep 200;
	move loader to y-axis [5.500000] speed [12.000000];
	wait-for-move loader along y-axis;
	Static_Var_2 = 1;
}

RestoreAfterDelay()
{
	set-signal-mask SIG_AIM;
	sleep Static_Var_1;
	start-script Reload();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	if( Static_Var_4 == 1 )
	{
		piecenum = rocket1;
	}
	if( Static_Var_4 == 2 )
	{
		piecenum = rocket2;
	}
	if( Static_Var_4 == 3 )
	{
		piecenum = rocket3;
	}
	if( Static_Var_4 == 4 )
	{
		piecenum = rocket4;
	}
	if( Static_Var_4 == 5 )
	{
		piecenum = rocket5;
	}
	if( Static_Var_4 == 6 )
	{
		piecenum = rocket6;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimPrimary(heading, pitch)
{
	while( Static_Var_3 == 1 )
	{
		sleep 400;
	}
	while( Static_Var_5 == 1 )
	{
		sleep 400;
	}
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	if( Static_Var_2 == 0 )
	{
		start-script Launch();
	}
	while( Static_Var_2 == 0 )
	{
		sleep 100;
	}
	turn turret to y-axis heading speed <50.000000>;
	turn launcher to x-axis <0.000000> - pitch speed <30.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Shot1()
{
	if( Static_Var_4 == 1 )
	{
		hide rocket1;
		emit-sfx 1024 from smokybit1;
		Static_Var_4 = 2;
		return (0);
	}
	if( Static_Var_4 == 2 )
	{
		hide rocket2;
		emit-sfx 1024 from smokybit2;
		Static_Var_4 = 3;
		return (0);
	}
	if( Static_Var_4 == 3 )
	{
		hide rocket3;
		emit-sfx 1024 from smokybit3;
		Static_Var_4 = 4;
		return (0);
	}
	if( Static_Var_4 == 4 )
	{
		hide rocket4;
		emit-sfx 1024 from smokybit4;
		Static_Var_4 = 5;
		return (0);
	}
	if( Static_Var_4 == 5 )
	{
		hide rocket5;
		emit-sfx 1024 from smokybit5;
		Static_Var_4 = 6;
		return (0);
	}
	if( Static_Var_4 == 6 )
	{
		hide rocket6;
		emit-sfx 1024 from smokybit6;
		start-script Reload();
		Static_Var_3 = 1;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode wheel1 type NOHEATCLOUD;
		explode loader type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode launcher type NOHEATCLOUD;
		explode rocket1 type NOHEATCLOUD;
		explode rocket2 type NOHEATCLOUD;
		explode rocket3 type NOHEATCLOUD;
		explode rocket4 type NOHEATCLOUD;
		explode rocket5 type NOHEATCLOUD;
		explode rocket6 type NOHEATCLOUD;
		explode wheel2 type NOHEATCLOUD;
		explode wheel3 type NOHEATCLOUD;
		explode wheel4 type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | SHATTER;
		explode wheel1 type NOHEATCLOUD | SHATTER;
		explode loader type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | SHATTER;
		explode launcher type NOHEATCLOUD | SHATTER;
		explode rocket1 type NOHEATCLOUD | SHATTER;
		explode rocket2 type NOHEATCLOUD | SHATTER;
		explode rocket3 type NOHEATCLOUD | SHATTER;
		explode rocket4 type NOHEATCLOUD | SHATTER;
		explode rocket5 type NOHEATCLOUD | SHATTER;
		explode rocket6 type NOHEATCLOUD | SHATTER;
		explode wheel2 type NOHEATCLOUD | SHATTER;
		explode wheel3 type NOHEATCLOUD | SHATTER;
		explode wheel4 type NOHEATCLOUD | SHATTER;
		explode door1 type NOHEATCLOUD | SHATTER;
		explode door2 type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode loader type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode launcher type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocket6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode door1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode door2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode loader type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode launcher type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocket6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode door1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode door2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
