#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, body, rotor, locks, l1, l2, l3,
       lock1, lock2, lock3, la, lb, lc, steam1, steam2,
       steam3;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, statechg_DesiredState, statechg_StateChanging;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	set ARMORED to 0;
	dont-cache rotor;
	spin rotor around y-axis speed Static_Var_1 accelerate Static_Var_2;
	sleep 500;
}

Stop()
{
	stop-spin rotor around y-axis decelerate Static_Var_3;
	set ARMORED to 1;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 91;
	Static_Var_3 = 200;
	dont-cache lock1;
	dont-cache lock2;
	dont-cache lock3;
	dont-cache body;
	turn l2 to y-axis <120.000000> now;
	turn l3 to y-axis <-120.000000> now;
	turn lock1 to x-axis <-90.000000> now;
	turn lock2 to x-axis <-90.000000> now;
	turn lock3 to x-axis <-90.000000> now;
	move body to y-axis [8.000000] now;
	call-script InitState();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	move body to y-axis [6.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [7.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [5.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [6.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [4.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [5.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [3.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [4.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [2.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [3.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [1.000000] speed [10.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [2.000000] speed [8.000000];
	wait-for-move body along y-axis;
	emit-sfx 256 | 1 from steam1;
	emit-sfx 256 | 1 from steam2;
	emit-sfx 256 | 1 from steam3;
	move body to y-axis [0.000000] speed [5.000000];
	turn lock1 to x-axis <0.000000> speed <60.000000>;
	turn lock2 to x-axis <0.000000> speed <60.000000>;
	turn lock3 to x-axis <0.000000> speed <60.000000>;
	wait-for-turn lock1 around x-axis;
	turn la to z-axis <180.000000> speed <200.000000>;
	turn lb to z-axis <180.000000> speed <200.000000>;
	turn lc to z-axis <180.000000> speed <200.000000>;
	wait-for-turn la around z-axis;
	turn lock1 to x-axis <-60.000000> speed <60.000000>;
	turn lock2 to x-axis <-60.000000> speed <60.000000>;
	turn lock3 to x-axis <-60.000000> speed <60.000000>;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

SetSpeed(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 45;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode socle type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode socle type NOHEATCLOUD | SHATTER;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode socle type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode rotor type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
