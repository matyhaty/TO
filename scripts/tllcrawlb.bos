#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, rear, front;

static-var  bMoving;


walkscr()
{
	if( bMoving )
	{
		move front to z-axis [0.250000] speed [10.000000];
		move rear to z-axis [0.150000] speed [12.000000];
		sleep 120;
	}
	if( bMoving )
	{
		move front to z-axis [0.450000] speed [10.000000];
		move rear to z-axis [-0.150000] speed [12.000000];
		sleep 120;
	}
	if( bMoving )
	{
		move front to z-axis [0.250000] speed [10.000000];
		move rear to z-axis [-0.350000] speed [12.000000];
		sleep 120;
	}
	if( bMoving )
	{
		move front to z-axis [-0.250000] speed [10.000000];
		move rear to z-axis [-0.150000] speed [12.000000];
		sleep 120;
	}
	if( bMoving )
	{
		move front to z-axis [-0.450000] speed [10.000000];
		move rear to z-axis [0.150000] speed [12.000000];
		sleep 120;
	}
	if( bMoving )
	{
		move front to z-axis [-0.250000] speed [10.000000];
		move rear to z-axis [0.350000] speed [12.000000];
		sleep 120;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walkscr();
		}
		if( !Func_Var_1 )
		{
			move front to z-axis [0.000000] speed [10.000000];
			move rear to z-axis [0.000000] speed [12.000000];
			sleep 100;
		}
	}
}

Create()
{
	bMoving = FALSE;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode rear type NOHEATCLOUD;
		explode body type NOHEATCLOUD | SHATTER;
		explode front type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode rear type NOHEATCLOUD;
		explode body type NOHEATCLOUD | SHATTER;
		explode front type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode rear type NOHEATCLOUD;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode front type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
