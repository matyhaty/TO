#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret1, turret2, turret3, turret4, sleeves1, sleeves2,
       sleeves3, sleeves4, barrel1a, barrel1b, barrel2a, barrel2b, barrel2c, barrel3a,
       barrel3b, barrel4a, barrel4b, barrel4c, flare1a, flare1b, flare2a, flare2b,
       flare2c, flare3a, flare3b, flare4a, flare4b, flare4c, rockets, r0,
       r1, r2, r3, r4, r5, r6, r7, r8,
       r9, wakes, wake1, wake2, wake3, wake4, wake5, wake6;

static-var  gun_3, Static_Var_2, gun_1, gun_2, Static_Var_5,
            restore_delay;

// Signal definitions
#define SIG_AIM_3			2
#define SIG_AIM				8
#define SIG_AIM_2			16
#define SIG_MOVE			32


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from body;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from turret1;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from turret4;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	set ACTIVATION to 1;
	hide flare1a;
	hide flare2a;
	hide flare3a;
	hide flare4a;
	hide flare1b;
	hide flare2b;
	hide flare3b;
	hide flare4b;
	hide flare2c;
	hide flare4c;
	gun_3 = base;
	Static_Var_2 = 0;
	gun_1 = base;
	gun_2 = base;
	Static_Var_5 = 0;
	restore_delay = 6000;
	turn turret4 to y-axis <-180.000000> now;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestorePrimary()
{
	sleep restore_delay;
	turn turret1 to y-axis <0.000000> speed <25.000000>;
	turn sleeves1 to x-axis <0.000000> speed <12.500000>;
}

RestoreSecondary()
{
	sleep restore_delay;
	turn turret3 to y-axis <0.000000> speed <25.000000>;
	turn sleeves3 to x-axis <0.000000> speed <12.500000>;
}

RestoreTertiary()
{
	sleep restore_delay;
	turn turret2 to y-axis <0.000000> speed <60.000000>;
	turn sleeves2 to x-axis <0.000000> speed <40.000000>;
}

RestoreWeapon4()
{
	sleep restore_delay;
	turn turret4 to y-axis <-180.000000> speed <60.000000>;
	turn sleeves4 to x-axis <0.000000> speed <40.000000>;
}

RestoreWeapon5()
{
	sleep 3000;
	set-signal-mask 4;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		emit-sfx 2 from wake5;
		emit-sfx 2 from wake6;
		sleep 200;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret1 to y-axis heading speed <50.000000>;
	turn sleeves1 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeves1 around x-axis;
	start-script RestorePrimary();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret3 to y-axis heading speed <50.000000>;
	turn sleeves3 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeves3 around x-axis;
	start-script RestoreSecondary();
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret2 to y-axis heading speed <60.000000>;
	turn sleeves2 to x-axis <0.000000> - pitch speed <30.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeves2 around x-axis;
	start-script RestoreTertiary();
	return (1);
}

AimWeapon4(heading, pitch)
{
	signal 1;
	set-signal-mask 1;
	turn turret4 to y-axis heading speed <60.000000>;
	turn sleeves4 to x-axis <0.000000> - pitch speed <30.000000>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn sleeves4 around x-axis;
	start-script RestoreWeapon4();
	return (1);
}

AimWeapon5(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1a to z-axis [-3.000000] speed [500.000000];
		show flare1a;
		sleep 150;
		move barrel1a to z-axis [0.000000] speed [3.000000];
		hide flare1a;
	}
	if( gun_1 == 1 )
	{
		move barrel1b to z-axis [-3.000000] speed [500.000000];
		show flare1b;
		sleep 150;
		move barrel1b to z-axis [0.000000] speed [3.000000];
		hide flare1b;
	}
	gun_1 = !gun_1;
}

FireSecondary()
{
	if( gun_2 == 0 )
	{
		move barrel3a to z-axis [-3.000000] speed [500.000000];
		show flare3a;
		sleep 150;
		move barrel3a to z-axis [0.000000] speed [3.000000];
		hide flare3a;
	}
	if( gun_2 == 1 )
	{
		move barrel3b to z-axis [-3.000000] speed [500.000000];
		show flare3b;
		sleep 150;
		move barrel3b to z-axis [0.000000] speed [3.000000];
		hide flare3b;
	}
	gun_2 = !gun_2;
}

FireTertiary()
{
	if( gun_3 == 0 )
	{
		move barrel2a to z-axis [-3.000000] speed [500.000000];
		show flare2a;
		sleep 150;
		move barrel2a to z-axis [0.000000] speed [3.000000];
		hide flare2a;
	}
	if( gun_3 == 1 )
	{
		move barrel2b to z-axis [-3.000000] speed [500.000000];
		show flare2b;
		sleep 150;
		move barrel2b to z-axis [0.000000] speed [3.000000];
		hide flare2b;
	}
	if( gun_3 == 2 )
	{
		move barrel2c to z-axis [-3.000000] speed [500.000000];
		show flare2c;
		sleep 150;
		move barrel2c to z-axis [0.000000] speed [3.000000];
		hide flare2c;
	}
	++gun_3;
	if( gun_3 >= 3 )
	{
		gun_3 = base;
	}
}

FireWeapon4()
{
	if( Static_Var_5 == 0 )
	{
		move barrel4a to z-axis [-3.000000] speed [500.000000];
		show flare4a;
		sleep 150;
		move barrel4a to z-axis [0.000000] speed [3.000000];
		hide flare4a;
	}
	if( Static_Var_5 == 1 )
	{
		move barrel4b to z-axis [-3.000000] speed [500.000000];
		show flare4b;
		sleep 150;
		move barrel4b to z-axis [0.000000] speed [3.000000];
		hide flare4b;
	}
	if( Static_Var_5 == 2 )
	{
		move barrel4c to z-axis [-3.000000] speed [500.000000];
		show flare4c;
		sleep 150;
		move barrel4c to z-axis [0.000000] speed [3.000000];
		hide flare4c;
	}
	++Static_Var_5;
	if( Static_Var_5 >= 3 )
	{
		Static_Var_5 = 0;
	}
}

FireWeapon5()
{
	++Static_Var_2;
	if( Static_Var_2 == 10 )
	{
		Static_Var_2 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
}

AimFromSecondary(piecenum)
{
	piecenum = turret3;
}

AimFromTertiary(piecenum)
{
	piecenum = turret2;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret4;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1a;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare1b;
	}
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare3a;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare3b;
	}
}

QueryTertiary(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = flare2a;
	}
	if( gun_3 == 1 )
	{
		piecenum = flare2b;
	}
	if( gun_3 == 2 )
	{
		piecenum = flare2c;
	}
}

QueryWeapon4(piecenum)
{
	if( Static_Var_5 == 0 )
	{
		piecenum = flare4a;
	}
	if( Static_Var_5 == 1 )
	{
		piecenum = flare4b;
	}
	if( Static_Var_5 == 2 )
	{
		piecenum = flare4c;
	}
}

QueryWeapon5(piecenum)
{
	if( Static_Var_2 == 0 )
	{
		piecenum = r0;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = r1;
	}
	if( Static_Var_2 == 2 )
	{
		piecenum = r2;
	}
	if( Static_Var_2 == 3 )
	{
		piecenum = r3;
	}
	if( Static_Var_2 == 4 )
	{
		piecenum = r4;
	}
	if( Static_Var_2 == 5 )
	{
		piecenum = r5;
	}
	if( Static_Var_2 == 6 )
	{
		piecenum = r6;
	}
	if( Static_Var_2 == 7 )
	{
		piecenum = r7;
	}
	if( Static_Var_2 == 8 )
	{
		piecenum = r8;
	}
	if( Static_Var_2 == 9 )
	{
		piecenum = r9;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1a type NOHEATCLOUD;
		explode barrel2b type NOHEATCLOUD;
		explode barrel4a type NOHEATCLOUD;
		explode barrel3a type NOHEATCLOUD;
		explode barrel1b type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD;
		explode wake2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1a type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel3b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel4c type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel4b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel1b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode barrel2b type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode turret1 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode turret2 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode turret3 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode turret4 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel4a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel3b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel4c type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel3a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel4c type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel4b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel3b type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
