#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, thorax, abdomen, cylinder, engine_r, engine_l, engineExR, engineExl,
       caput, nano, streben;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide engineExR;
	hide engineExl;
	Static_Var_1 = 5000;
	set ARMORED to 1;
	start-script SmokeUnit();
}

StartBuilding()
{
	turn thorax to x-axis <35.000000> speed <65.000000>;
	turn cylinder to x-axis <-85.000000> speed <165.000000>;
	wait-for-turn thorax around x-axis;
	wait-for-turn cylinder around x-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	turn thorax to x-axis <0.000000> speed <65.000000>;
	turn cylinder to x-axis <0.000000> speed <165.000000>;
	wait-for-turn thorax around x-axis;
	wait-for-turn cylinder around x-axis;
	set INBUILDSTANCE to 0;
}

RestoreAfterDelay()
{
	sleep Static_Var_1;
}

QueryNanoPiece(piecenum)
{
	piecenum = nano;
}

SweetSpot(piecenum)
{
	piecenum = thorax;
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode base type NOHEATCLOUD | SHATTER;
	explode thorax type NOHEATCLOUD | SHATTER | SMOKE | FIRE;
	return (corpsetype);
}
