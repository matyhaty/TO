#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, launcher2, door1, door2, plate, wake1,
       wake2, fp11, fp12, fp13, ground;

static-var  Static_Var_1, gun_1, gun_3, restore_delay, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_3			4
#define SIG_MOVE			8


activatescr()
{
	move door1 to x-axis [0.000000] now;
	move door1 to x-axis [4.000000] speed [6.000000];
	move door2 to x-axis [0.000000] now;
	move door2 to x-axis [-4.000000] speed [7.000000];
	sleep 600;
}

deactivatescr()
{
	move plate to y-axis [0.000000] now;
	move door1 to x-axis [4.000000] now;
	move door2 to x-axis [-4.000000] now;
	sleep 750;
	move door1 to x-axis [0.000000] speed [6.000000];
	move door2 to x-axis [0.000000] speed [7.000000];
	sleep 600;
}

SetDirection(heading)
{
	var Func_Var_2;
	Func_Var_2 = ( get ABS(Static_Var_8) - get ABS(heading) ) / 2;
	turn ground to y-axis heading speed Func_Var_2;
	turn base to y-axis <0.000000> - heading speed Func_Var_2;
	Static_Var_8 = heading;
}

RockOnWaves(Func_Var_1, Func_Var_2, Func_Var_3)
{
	Func_Var_1 = -18;
	Func_Var_2 = -18;
	while( TRUE )
	{
		while( get ABS(Func_Var_2) < 238 )
		{
			Func_Var_3 = 263 - get ABS(Func_Var_2);
			turn ground to x-axis Func_Var_2 speed Func_Var_3 * <0.021978>;
			wait-for-turn ground around x-axis;
			Func_Var_2 = Func_Var_2 + Func_Var_1;
		}
		Func_Var_1 = 0 - Func_Var_1;
		Func_Var_2 = Func_Var_2 + Func_Var_1 + Func_Var_1;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script RockOnWaves();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

go()
{
	call-script activatescr();
	Static_Var_1 = 1;
}

stop()
{
	Static_Var_1 = 0;
	call-script deactivatescr();
	Static_Var_5 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_7 )
	{
		Static_Var_6 = requestedstate;
		return (0);
	}
	Static_Var_7 = 1;
	currentstate = Static_Var_6;
	Static_Var_6 = requestedstate;
	while( Static_Var_6 != currentstate )
	{
		if( Static_Var_6 )
		{
			call-script stop();
			currentstate = 1;
		}
		else
		{
			call-script go();
			currentstate = 0;
		}
	}
	Static_Var_7 = 0;
}

Create()
{
	Static_Var_5 = 0;
	gun_1 = flare1;
	gun_3 = flare1;
	Static_Var_1 = 0;
	restore_delay = 3000;
	Static_Var_6 = 1;
	Static_Var_7 = 0;
	start-script SmokeUnit();
}

abaim()
{
	sleep 4000;
	signal SIG_AIM_3;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 8;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	Static_Var_5 = 0;
	start-script RequestState(1);
	turn launcher2 to y-axis <0.000000> speed <70.016484>;
	turn launcher2 to x-axis <0.000000> speed <30.005495>;
}

waveSplash()
{
	while( TRUE )
	{
		turn base to x-axis <-3.000000> speed <3.000000>;
		move base to y-axis [0.350000] speed [0.229999];
		wait-for-turn base around x-axis;
		turn base to x-axis <0.000000> speed <3.000000>;
		move base to y-axis [0.000000] speed [0.229999];
		wait-for-turn base around x-axis;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	var Func_Var_1;
	start-script waveSplash();
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		Func_Var_1 = get CURRENT_SPEED * 100 / get MAX_SPEED;
		if( Func_Var_1 < 50 )
		{
			Func_Var_1 = 50;
		}
		sleep 12000 / Func_Var_1;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	turn base to x-axis <0.000000> speed <3.000000>;
	move base to y-axis [0.000000] speed [0.229999];
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_1 )
	{
		sleep 250;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn launcher2 to y-axis heading speed <170.038462>;
	turn launcher2 to x-axis <0.000000> - pitch speed <130.027473>;
	wait-for-turn launcher2 around y-axis;
	wait-for-turn launcher2 around x-axis;
	start-script abaim();
	return (1);
}

TargetCleared(Func_Var_1)
{
	signal SIG_AIM_3;
}

FirePrimary()
{
	++gun_1;
	if( gun_1 >= 3 )
	{
		gun_1 = flare1;
	}
}

FireTertiary()
{
	gun_3 = !gun_3;
}

AimFromPrimary(piecenum)
{
	piecenum = plate;
}

AimFromTertiary(piecenum)
{
	piecenum = launcher2;
}

QueryPrimary(piecenum)
{
	piecenum = 9 + gun_1;
}

QueryTertiary(piecenum)
{
	piecenum = gun_3;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD;
		explode flare2 type NOHEATCLOUD;
		explode launcher2 type NOHEATCLOUD;
		explode plate type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD;
		explode wake2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode launcher2 type NOHEATCLOUD | SHATTER;
		explode plate type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode launcher2 type NOHEATCLOUD | SHATTER;
		explode plate type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode door1 type NOHEATCLOUD;
	explode door2 type NOHEATCLOUD;
	explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode launcher2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode plate type NOHEATCLOUD;
	explode wake1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wake2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
