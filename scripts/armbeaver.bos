#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, beam, door1, door2, plate, arm, nano, turret;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


activatescr()
{
	turn door1 to z-axis <0.000000> now;
	turn door1 to z-axis <-70.659341> speed <182.126374>;
	turn door2 to z-axis <0.000000> now;
	turn door2 to z-axis <70.659341> speed <182.126374>;
	sleep 388;
	move door1 to y-axis [-2.350000] speed [6.041132];
	move door2 to y-axis [-2.250000] speed [5.784058];
	sleep 389;
	move plate to y-axis [4.450000] speed [11.439600];
	sleep 389;
	turn arm to x-axis <90.016484> speed <230.824176>;
	turn nano to x-axis <-66.159341> speed <169.648352>;
	sleep 390;
}

deactivatescr()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.000000> speed <160.038462>;
	wait-for-turn turret around y-axis;
	move plate to y-axis [4.450000] now;
	move door1 to y-axis [-2.350000] now;
	move door2 to y-axis [-2.250000] now;
	turn door1 to z-axis <-70.659341> now;
	turn door2 to z-axis <70.659341> now;
	turn arm to x-axis <90.016484> now;
	turn arm to x-axis <0.000000> speed <232.005495>;
	turn nano to x-axis <-66.159341> now;
	turn nano to x-axis <0.000000> speed <170.527473>;
	sleep 388;
	move plate to y-axis [0.000000] speed [11.439600];
	sleep 389;
	move door1 to y-axis [0.000000] speed [6.041132];
	move door2 to y-axis [0.000000] speed [5.784058];
	sleep 389;
	turn door1 to z-axis <0.000000> speed <181.192308>;
	turn door2 to z-axis <0.000000> speed <181.192308>;
	sleep 390;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_3 )
	{
		Static_Var_2 = requestedstate;
		return (0);
	}
	Static_Var_3 = 1;
	currentstate = Static_Var_2;
	Static_Var_2 = requestedstate;
	while( Static_Var_2 != currentstate )
	{
		if( Static_Var_2 )
		{
			call-script deactivatescr();
			Static_Var_1 = 1;
			currentstate = 1;
		}
		else
		{
			call-script activatescr();
			Static_Var_1 = 0;
			currentstate = 0;
		}
	}
	Static_Var_3 = 0;
}

Create()
{
	Static_Var_1 = 1;
	Static_Var_2 = 1;
	Static_Var_3 = 0;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1, Func_Var_2)
{
	start-script RequestState(0);
	while( Static_Var_1 )
	{
		sleep 100;
	}
	signal 4;
	turn turret to y-axis Func_Var_1 speed <160.038462>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal 4;
	set-signal-mask 4;
	sleep 6000;
	set-signal-mask 0;
	signal 4;
	start-script RequestState(1);
}

QueryNanoPiece(piecenum)
{
	piecenum = beam;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arm type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode beam type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		explode nano type NOHEATCLOUD;
		explode plate type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arm type NOHEATCLOUD | FALL;
		explode base type NOHEATCLOUD;
		explode beam type NOHEATCLOUD | FALL;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		explode nano type NOHEATCLOUD | SHATTER;
		explode plate type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		explode beam type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		explode nano type NOHEATCLOUD | SHATTER;
		explode plate type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode arm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode beam type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode door1 type NOHEATCLOUD;
	explode door2 type NOHEATCLOUD;
	explode nano type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode plate type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
