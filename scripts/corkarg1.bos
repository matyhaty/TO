#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, torso, stick, plasmasprayer, cap, fire, lshoulder,
       larm, lcannon, lbarrel1, lfire1, lbarrel2, lfire2, launcher, glowybit,
       rocketfire1, rocketfire2, rshoulder, rarm, rcannon, rbarrel1, rfire1, rbarrel2,
       rfire2, cellholder, nrgycells, lupleg, llowleg, lfoot, lftoe, lleftoe,
       lrightoe, rupleg, rlowleg, rfoot, rftoe, rleftoe, rrightoe, lbarrel1back,
       lbarrel2back, rbarrel1back, rbarrel2back, lbtoe1, lbtoe2, rbtoe1, rbtoe2;

static-var  gun_1, bMoving, bAiming, Static_Var_4, Static_Var_5,
            Static_Var_6, gun_3, Static_Var_8, Static_Var_9, Static_Var_10,
            unitviewer, Static_Var_12, Static_Var_13;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 4 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from base;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from larm;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from launcher;
			}
			if( Func_Var_4 == 4 )
			{
				emit-sfx smoketype from rcannon;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	set-signal-mask 16;
	bMoving = TRUE;
	while( bMoving )
	{
		if( !Static_Var_13 )
		{
			turn rupleg to x-axis <-40.000000> speed <53.000000>;
			turn rlowleg to x-axis <0.000000> speed <26.000000>;
		}
		turn rfoot to x-axis <10.000000> speed <30.000000>;
		turn lupleg to x-axis <30.000000> speed <23.000000>;
		turn lbtoe1 to x-axis <-10.000000> speed <8.000000>;
		turn lbtoe2 to x-axis <-7.000000> speed <6.000000>;
		if( Static_Var_13 )
		{
			turn rupleg to x-axis <-40.000000> speed <28.000000>;
			turn llowleg to x-axis <20.000000> speed <15.000000>;
			Static_Var_13 = 0;
		}
		if( !Static_Var_13 )
		{
			if( !bAiming )
			{
				move torso to y-axis [4.800000] speed [2.400000];
				turn torso to z-axis <3.000000> speed <1.000000>;
				turn torso to y-axis <6.000000> speed <10.000000>;
				turn stick to y-axis <8.000000> speed <11.000000>;
				turn larm to x-axis <-22.000000> speed <14.000000>;
				turn rarm to x-axis <18.000000> speed <14.000000>;
				move stick to y-axis [3.600000] speed [1.200000];
				move torso to x-axis [1.200000] speed [0.000000];
				turn lcannon to y-axis <4.000000> speed <3.000000>;
				turn rcannon to y-axis <-4.000000> speed <3.000000>;
				move lshoulder to y-axis [1.200000] speed [1.200000];
				move rshoulder to y-axis [-1.200000] speed [0.400000];
				move launcher to y-axis [1.200000] speed [0.800000];
			}
		}
		turn llowleg to x-axis <20.000000> speed <23.000000>;
		turn lftoe to x-axis <-20.000000> speed <15.000000>;
		turn lrightoe to x-axis <-15.000000> speed <11.000000>;
		turn lleftoe to x-axis <-15.000000> speed <11.000000>;
		turn lrightoe to y-axis <15.000000> speed <11.000000>;
		turn lleftoe to y-axis <-15.000000> speed <11.000000>;
		turn lfoot to x-axis <-30.000000> speed <23.000000>;
		sleep 1250;
		if( !bAiming )
		{
			move torso to y-axis [0.000000] speed [1.200000];
			move stick to y-axis [4.800000] speed [0.800000];
			move lshoulder to y-axis [0.000000] speed [0.400000];
			move rshoulder to y-axis [0.000000] speed [0.400000];
			move launcher to y-axis [0.000000] speed [0.400000];
		}
		turn rupleg to x-axis <0.000000> speed <68.000000>;
		turn rlowleg to x-axis <-10.000000> speed <17.000000>;
		turn rfoot to x-axis <0.000000> speed <51.000000>;
		turn rftoe to x-axis <0.000000> speed <91.000000>;
		turn rleftoe to x-axis <0.000000> speed <82.000000>;
		turn rrightoe to x-axis <0.000000> speed <82.000000>;
		turn rbtoe1 to x-axis <0.000000> speed <60.000000>;
		turn rbtoe2 to x-axis <0.000000> speed <40.000000>;
		turn llowleg to x-axis <35.000000> speed <25.000000>;
		turn lftoe to x-axis <50.000000> speed <110.000000>;
		turn lrightoe to x-axis <45.000000> speed <100.000000>;
		turn lleftoe to x-axis <45.000000> speed <100.000000>;
		turn lrightoe to y-axis <0.000000> speed <23.000000>;
		turn lleftoe to y-axis <0.000000> speed <23.000000>;
		turn lfoot to x-axis <20.000000> speed <40.000000>;
		turn lbtoe1 to x-axis <-30.000000> speed <45.000000>;
		turn lbtoe2 to x-axis <-20.000000> speed <30.000000>;
		sleep 550;
		if( !bAiming )
		{
			move torso to y-axis [4.800000] speed [2.400000];
			turn torso to z-axis <-3.000000> speed <1.000000>;
			turn torso to y-axis <-6.000000> speed <10.000000>;
			turn stick to y-axis <-8.000000> speed <11.000000>;
			turn larm to x-axis <18.000000> speed <14.000000>;
			turn rarm to x-axis <-22.000000> speed <14.000000>;
			move stick to y-axis [8.400000] speed [1.200000];
			move torso to x-axis [-1.200000] speed [0.000000];
			turn lcannon to y-axis <-4.000000> speed <3.000000>;
			turn rcannon to y-axis <4.000000> speed <3.000000>;
			move lshoulder to y-axis [1.200000] speed [1.200000];
			move rshoulder to y-axis [-1.200000] speed [0.400000];
		}
		turn rupleg to x-axis <30.000000> speed <23.000000>;
		turn rlowleg to x-axis <20.000000> speed <23.000000>;
		turn rftoe to x-axis <-20.000000> speed <15.000000>;
		turn rrightoe to x-axis <-15.000000> speed <11.000000>;
		turn rleftoe to x-axis <-15.000000> speed <11.000000>;
		turn rrightoe to y-axis <15.000000> speed <11.000000>;
		turn rleftoe to y-axis <-15.000000> speed <11.000000>;
		turn rfoot to x-axis <-30.000000> speed <23.000000>;
		turn rbtoe1 to x-axis <-10.000000> speed <8.000000>;
		turn rbtoe2 to x-axis <-7.000000> speed <6.000000>;
		turn lupleg to x-axis <-40.000000> speed <53.000000>;
		turn llowleg to x-axis <0.000000> speed <26.000000>;
		turn lfoot to x-axis <10.000000> speed <30.000000>;
		sleep 1250;
		if( !bAiming )
		{
			move torso to y-axis [0.000000] speed [1.200000];
			move stick to y-axis [4.800000] speed [0.800000];
			move lshoulder to y-axis [0.000000] speed [0.400000];
			move rshoulder to y-axis [0.000000] speed [0.400000];
		}
		turn lupleg to x-axis <0.000000> speed <68.000000>;
		turn llowleg to x-axis <-10.000000> speed <17.000000>;
		turn lftoe to x-axis <0.000000> speed <82.000000>;
		turn lfoot to x-axis <0.000000> speed <51.000000>;
		turn lleftoe to x-axis <0.000000> speed <91.000000>;
		turn lrightoe to x-axis <0.000000> speed <91.000000>;
		turn lbtoe1 to x-axis <0.000000> speed <60.000000>;
		turn lbtoe2 to x-axis <0.000000> speed <40.000000>;
		turn rlowleg to x-axis <35.000000> speed <25.000000>;
		turn rftoe to x-axis <50.000000> speed <110.000000>;
		turn rrightoe to x-axis <45.000000> speed <100.000000>;
		turn rleftoe to x-axis <45.000000> speed <100.000000>;
		turn rrightoe to y-axis <0.000000> speed <23.000000>;
		turn rleftoe to y-axis <0.000000> speed <23.000000>;
		turn rfoot to x-axis <20.000000> speed <40.000000>;
		turn rbtoe1 to x-axis <-30.000000> speed <45.000000>;
		turn rbtoe2 to x-axis <-20.000000> speed <30.000000>;
		sleep 550;
	}
}

StopMoving()
{
	signal 16;
	bMoving = FALSE;
	Static_Var_13 = 1;
	if( !bAiming )
	{
		turn torso to y-axis <0.000000> speed <40.000000>;
	}
	if( !Static_Var_4 )
	{
		turn larm to x-axis <0.000000> speed <50.000000>;
		turn rarm to x-axis <0.000000> speed <50.000000>;
		turn lcannon to y-axis <0.000000> speed <20.000000>;
		turn rcannon to y-axis <0.000000> speed <20.000000>;
	}
	if( !Static_Var_5 )
	{
		turn stick to y-axis <0.000000> speed <20.000000>;
		move stick to y-axis [0.000000] speed [1.200000];
	}
	if( Static_Var_5 )
	{
		if( !Static_Var_12 )
		{
			move stick to y-axis [0.000000] speed [1.200000];
		}
	}
	turn lupleg to x-axis <0.000000> speed <100.000000>;
	turn llowleg to x-axis <0.000000> speed <100.000000>;
	turn lfoot to x-axis <0.000000> speed <90.000000>;
	turn lbtoe1 to x-axis <0.000000> speed <90.000000>;
	turn lbtoe2 to x-axis <0.000000> speed <80.000000>;
	turn lftoe to x-axis <0.000000> speed <60.000000>;
	turn lleftoe to x-axis <0.000000> speed <60.000000>;
	turn lrightoe to x-axis <0.000000> speed <60.000000>;
	turn lleftoe to y-axis <0.000000> speed <45.000000>;
	turn lrightoe to y-axis <0.000000> speed <45.000000>;
	turn rupleg to x-axis <0.000000> speed <100.000000>;
	turn rlowleg to x-axis <0.000000> speed <100.000000>;
	turn rfoot to x-axis <0.000000> speed <90.000000>;
	turn rftoe to x-axis <0.000000> speed <60.000000>;
	turn rleftoe to x-axis <0.000000> speed <60.000000>;
	turn rrightoe to x-axis <0.000000> speed <60.000000>;
	turn rleftoe to y-axis <0.000000> speed <45.000000>;
	turn rrightoe to y-axis <0.000000> speed <45.000000>;
	turn rbtoe1 to x-axis <0.000000> speed <90.000000>;
	turn rbtoe2 to x-axis <0.000000> speed <80.000000>;
	turn torso to z-axis <0.000000> speed <8.000000>;
	move torso to y-axis [0.000000] speed [4.000000];
	move torso to x-axis [0.000000] speed [1.200000];
	move lshoulder to y-axis [0.000000] speed [3.200000];
	move rshoulder to y-axis [0.000000] speed [3.200000];
}

RestorePrimary()
{
	set-signal-mask SIG_AIM;
	sleep 6000;
	Static_Var_9 = 0;
	Static_Var_10 = 0;
	turn stick to y-axis <0.000000> speed <50.000000>;
	turn torso to y-axis <0.000000> speed <50.000000>;
	turn larm to x-axis <0.000000> speed <40.000000>;
	turn rarm to x-axis <0.000000> speed <40.000000>;
	turn lcannon to y-axis <0.000000> speed <65.000000>;
	turn rcannon to y-axis <0.000000> speed <65.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn rcannon around y-axis;
	Static_Var_4 = 0;
	if( bAiming == 1 )
	{
		if( Static_Var_5 == 0 AND Static_Var_6 == 0 )
		{
			bAiming = FALSE;
			return (0);
		}
	}
}

RestoreSecondary()
{
	set-signal-mask SIG_AIM_2;
	sleep 6500;
	turn plasmasprayer to y-axis <0.000000> speed <80.000000>;
	wait-for-turn plasmasprayer around y-axis;
	Static_Var_8 = 0;
	move stick to y-axis [0.000000] speed [1.200000];
	wait-for-move stick along y-axis;
	Static_Var_5 = 0;
	if( bAiming == 1 )
	{
		if( !Static_Var_4 AND !Static_Var_6 )
		{
			bAiming = FALSE;
		}
	}
}

RestoreTertiary()
{
	set-signal-mask SIG_AIM_3;
	sleep 7000;
	Static_Var_6 = 0;
	turn launcher to y-axis <0.000000> speed <105.000000>;
	turn launcher to x-axis <0.000000> speed <105.000000>;
	if( bAiming == 1 )
	{
		if( Static_Var_4 == 0 AND Static_Var_5 == 0 )
		{
			bAiming = FALSE;
		}
	}
}

Demo()
{
	unitviewer = TRUE;
}

Create()
{
	gun_1 = pelvis;
	gun_3 = pelvis;
	Static_Var_8 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_9 = 0;
	Static_Var_10 = 0;
	Static_Var_9 = 0;
	unitviewer = FALSE;
	Static_Var_12 = 0;
	Static_Var_13 = 1;
	start-script RestoreSecondary();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	dont-cache glowybit;
	dont-cache nrgycells;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = rfire2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		piecenum = lfire1;
		return (0);
	}
	if( gun_1 == 3 )
	{
		piecenum = rfire1;
		return (0);
	}
	if( gun_1 == 4 )
	{
		piecenum = lfire2;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	Static_Var_4 = 1;
	Static_Var_9 = heading;
	Static_Var_10 = 0 - pitch;
	if( !Static_Var_5 )
	{
		turn stick to y-axis heading speed <150.000000>;
	}
	turn torso to y-axis heading speed <150.000000>;
	turn larm to x-axis <0.000000> - pitch speed <120.000000>;
	turn rarm to x-axis <0.000000> - pitch speed <120.000000>;
	Static_Var_10 = 0 - pitch;
	if( Static_Var_10 <= -32768 )
	{
		turn rcannon to y-axis Static_Var_10 speed <90.000000>;
		turn lcannon to y-axis <0.000000> - Static_Var_10 speed <90.000000>;
	}
	if( Static_Var_10 > -32768 )
	{
		turn rcannon to y-axis <0.000000> speed <90.000000>;
		turn lcannon to y-axis <0.000000> speed <90.000000>;
	}
	wait-for-turn torso around y-axis;
	wait-for-turn lshoulder around x-axis;
	wait-for-turn rshoulder around x-axis;
	wait-for-turn rcannon around x-axis;
	wait-for-turn lcannon around x-axis;
	start-script RestorePrimary();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		gun_1 = torso;
		move rbarrel2 to z-axis [-13.200000] speed [300.000000];
		sleep 150;
		move rbarrel2 to z-axis [0.000000] speed [3.600000];
		return (0);
	}
	if( gun_1 == 2 )
	{
		gun_1 = stick;
		move lbarrel1 to z-axis [-13.200000] speed [300.000000];
		sleep 150;
		move lbarrel1 to z-axis [0.000000] speed [3.600000];
		return (0);
	}
	if( gun_1 == 3 )
	{
		gun_1 = plasmasprayer;
		move rbarrel1 to z-axis [-13.200000] speed [300.000000];
		sleep 150;
		move rbarrel1 to z-axis [0.000000] speed [3.600000];
		return (0);
	}
	if( gun_1 == 4 )
	{
		gun_1 = pelvis;
		move lbarrel2 to z-axis [-13.200000] speed [300.000000];
		sleep 150;
		move lbarrel2 to z-axis [0.000000] speed [3.600000];
		return (0);
	}
}

QuerySecondary(piecenum)
{
	piecenum = fire;
}

AimFromSecondary(piecenum)
{
	piecenum = plasmasprayer;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	Static_Var_5 = 1;
	bAiming = TRUE;
	if( Static_Var_8 == 0 )
	{
		if( !bMoving )
		{
			move stick to y-axis [3.600000] speed [2.000000];
			wait-for-move stick along y-axis;
		}
		if( bMoving )
		{
			move stick to y-axis [8.400000] speed [2.000000];
			wait-for-move stick along y-axis;
		}
	}
	if( !bMoving )
	{
		move stick to y-axis [3.600000] speed [2.000000];
	}
	if( bMoving )
	{
		move stick to y-axis [8.400000] speed [2.000000];
	}
	turn stick to y-axis heading speed <140.000000>;
	wait-for-turn stick around y-axis;
	start-script RestoreSecondary();
	return (1);
}

FireSecondary()
{
	explode fire type NOHEATCLOUD;
	move plasmasprayer to z-axis [-0.800000] speed [20.000000];
	move cap to z-axis [2.400000] speed [26.000000];
	sleep 500;
	move plasmasprayer to z-axis [0.000000] speed [1.200000];
	move cap to z-axis [0.000000] speed [2.000000];
}

QueryTertiary(piecenum)
{
	if( gun_3 == 1 )
	{
		piecenum = rocketfire1;
		return (0);
	}
	if( gun_3 == 2 )
	{
		piecenum = rocketfire2;
		return (0);
	}
}

AimFromTertiary(piecenum)
{
	piecenum = launcher;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	if( !Static_Var_6 )
	{
		if( !Static_Var_4 )
		{
			turn larm to x-axis <0.000000> speed <50.000000>;
			turn rarm to x-axis <0.000000> speed <50.000000>;
			move lshoulder to y-axis [0.000000] speed [3.200000];
			move rshoulder to y-axis [0.000000] speed [3.200000];
			turn lcannon to y-axis <0.000000> speed <20.000000>;
			turn rcannon to y-axis <0.000000> speed <20.000000>;
		}
	}
	Static_Var_6 = 1;
	bAiming = TRUE;
	if( !unitviewer )
	{
		turn launcher to y-axis heading - Static_Var_9 speed <160.000000>;
		turn launcher to x-axis <0.000000> - pitch - Static_Var_10 speed <85.000000>;
	}
	if( unitviewer )
	{
		turn launcher to y-axis heading speed <160.000000>;
		turn launcher to x-axis <0.000000> - pitch speed <85.000000>;
	}
	wait-for-turn launcher around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreTertiary();
	return (1);
}

FireTertiary()
{
	if( gun_3 == 1 )
	{
		gun_3 = torso;
		return (0);
	}
	if( gun_3 == 2 )
	{
		gun_3 = pelvis;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rcannon type NOHEATCLOUD | SHATTER;
		explode rbarrel1 type NOHEATCLOUD | SHATTER;
		explode lshoulder type NOHEATCLOUD | SHATTER;
		explode rarm type NOHEATCLOUD | SHATTER;
		explode torso type NOHEATCLOUD;
		explode stick type NOHEATCLOUD;
		explode plasmasprayer type NOHEATCLOUD | SHATTER;
		explode larm type NOHEATCLOUD;
		explode lcannon type NOHEATCLOUD;
		explode lbarrel1 type NOHEATCLOUD;
		explode lfire1 type NOHEATCLOUD;
		explode lbarrel2 type NOHEATCLOUD;
		explode lfire2 type NOHEATCLOUD;
		explode launcher type NOHEATCLOUD;
		explode glowybit type NOHEATCLOUD;
		explode rocketfire1 type NOHEATCLOUD;
		explode rocketfire2 type NOHEATCLOUD;
		explode rshoulder type NOHEATCLOUD;
		explode rfire1 type NOHEATCLOUD;
		explode rbarrel2 type NOHEATCLOUD;
		explode rfire2 type NOHEATCLOUD;
		explode cellholder type NOHEATCLOUD;
		explode nrgycells type NOHEATCLOUD;
		explode lupleg type NOHEATCLOUD;
		explode llowleg type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode lftoe type NOHEATCLOUD;
		explode lleftoe type NOHEATCLOUD;
		explode lrightoe type NOHEATCLOUD;
		explode rupleg type NOHEATCLOUD;
		explode rlowleg type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rftoe type NOHEATCLOUD;
		explode rleftoe type NOHEATCLOUD;
		explode rrightoe type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | SHATTER;
		explode pelvis type NOHEATCLOUD | SHATTER;
		explode torso type NOHEATCLOUD | SHATTER;
		explode stick type NOHEATCLOUD | SHATTER;
		explode plasmasprayer type NOHEATCLOUD | SHATTER;
		explode larm type NOHEATCLOUD | SHATTER;
		explode lcannon type NOHEATCLOUD | SHATTER;
		explode lbarrel1 type NOHEATCLOUD | SHATTER;
		explode lfire1 type NOHEATCLOUD | SHATTER;
		explode lbarrel2 type NOHEATCLOUD | SHATTER;
		explode lfire2 type NOHEATCLOUD | SHATTER;
		explode launcher type NOHEATCLOUD | SHATTER;
		explode glowybit type NOHEATCLOUD | SHATTER;
		explode rocketfire1 type NOHEATCLOUD | SHATTER;
		explode rocketfire2 type NOHEATCLOUD | SHATTER;
		explode rshoulder type NOHEATCLOUD | SHATTER;
		explode rcannon type NOHEATCLOUD | SHATTER;
		explode rbarrel1 type NOHEATCLOUD | SHATTER;
		explode lshoulder type NOHEATCLOUD | SHATTER;
		explode rarm type NOHEATCLOUD | SHATTER;
		explode rfire1 type NOHEATCLOUD | SHATTER;
		explode rbarrel2 type NOHEATCLOUD | SHATTER;
		explode rfire2 type NOHEATCLOUD | SHATTER;
		explode cellholder type NOHEATCLOUD | SHATTER;
		explode nrgycells type NOHEATCLOUD | SHATTER;
		explode lupleg type NOHEATCLOUD | SHATTER;
		explode llowleg type NOHEATCLOUD | SHATTER;
		explode lfoot type NOHEATCLOUD | SHATTER;
		explode lftoe type NOHEATCLOUD | SHATTER;
		explode lleftoe type NOHEATCLOUD | SHATTER;
		explode lrightoe type NOHEATCLOUD | SHATTER;
		explode rupleg type NOHEATCLOUD | SHATTER;
		explode rlowleg type NOHEATCLOUD | SHATTER;
		explode rfoot type NOHEATCLOUD | SHATTER;
		explode rftoe type NOHEATCLOUD | SHATTER;
		explode rleftoe type NOHEATCLOUD | SHATTER;
		explode rrightoe type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode torso type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode stick type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode plasmasprayer type NOHEATCLOUD | SHATTER;
		explode lshoulder type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode larm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lcannon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lbarrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfire1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lbarrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfire2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode launcher type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode glowybit type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocketfire1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rocketfire2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rshoulder type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rcannon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rbarrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfire1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rbarrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfire2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode cellholder type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode nrgycells type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode llowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lleftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lrightoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rlowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rleftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rrightoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode stick type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode plasmasprayer type NOHEATCLOUD | SHATTER;
	explode lshoulder type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode larm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lcannon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lbarrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfire1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lbarrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfire2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode launcher type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode glowybit type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocketfire1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rocketfire2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rshoulder type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rcannon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rbarrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfire1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rbarrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfire2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode cellholder type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode nrgycells type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode llowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lrightoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rlowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleftoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rrightoe type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
