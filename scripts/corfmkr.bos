#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, float1, float2, float3, float4, float5, float6, door1,
       door2, door3, door4, glow;

static-var  Static_Var_1, Static_Var_2;


activatescr()
{
	move float1 to y-axis [0.000000] now;
	move float1 to z-axis [0.000000] now;
	move float1 to z-axis [-5.375000] speed [5.581506];
	move float2 to x-axis [0.000000] now;
	move float2 to x-axis [-4.499982] speed [4.672876];
	move float2 to y-axis [0.000000] now;
	move float2 to z-axis [0.000000] now;
	move float2 to z-axis [-2.625000] speed [2.725842];
	move float3 to x-axis [0.000000] now;
	move float3 to x-axis [-4.375000] speed [4.543091];
	move float3 to y-axis [0.000000] now;
	move float3 to z-axis [0.000000] now;
	move float3 to z-axis [2.499982] speed [2.596039];
	move float4 to y-axis [0.000000] now;
	move float4 to z-axis [0.000000] now;
	move float4 to z-axis [5.375000] speed [5.581506];
	move float5 to x-axis [0.000000] now;
	move float5 to x-axis [4.624982] speed [4.802686];
	move float5 to y-axis [0.000000] now;
	move float5 to z-axis [0.000000] now;
	move float5 to z-axis [2.750000] speed [2.855652];
	move float6 to x-axis [0.000000] now;
	move float6 to x-axis [4.625000] speed [4.802686];
	move float6 to y-axis [0.000000] now;
	move float6 to z-axis [0.000000] now;
	move float6 to z-axis [-2.625000] speed [2.725842];
	sleep 963;
	turn door1 to x-axis <-90.016484> speed <92.989011>;
	turn door2 to x-axis <90.016484> speed <92.989011>;
	turn door3 to z-axis <90.016484> speed <92.989011>;
	turn door4 to z-axis <-90.016484> speed <92.989011>;
	sleep 968;
}

deactivatescr()
{
	move float1 to y-axis [0.000000] now;
	move float1 to z-axis [-5.375000] now;
	move float2 to x-axis [-4.499982] now;
	move float2 to y-axis [0.000000] now;
	move float2 to z-axis [-2.625000] now;
	move float3 to x-axis [-4.375000] now;
	move float3 to y-axis [0.000000] now;
	move float3 to z-axis [2.499982] now;
	move float4 to y-axis [0.000000] now;
	move float4 to z-axis [5.375000] now;
	move float5 to x-axis [4.624982] now;
	move float5 to y-axis [0.000000] now;
	move float5 to z-axis [2.750000] now;
	move float6 to x-axis [4.625000] now;
	move float6 to y-axis [0.000000] now;
	move float6 to z-axis [-2.625000] now;
	turn door1 to x-axis <0.000000> speed <90.192308>;
	turn door2 to x-axis <0.000000> speed <90.192308>;
	turn door3 to z-axis <0.000000> speed <90.192308>;
	turn door4 to z-axis <0.000000> speed <90.192308>;
	sleep 998;
	move float1 to z-axis [-1.818329] speed [3.528436];
	move float2 to x-axis [-1.522302] speed [2.954041];
	move float2 to z-axis [-0.888013] speed [1.723187];
	move float3 to x-axis [-1.480023] speed [2.871979];
	move float3 to z-axis [0.845715] speed [1.641125];
	move float4 to z-axis [1.818311] speed [3.528436];
	move float5 to x-axis [1.564606] speed [3.036096];
	move float5 to z-axis [0.930298] speed [1.805237];
	move float6 to x-axis [1.564606] speed [3.036096];
	move float6 to z-axis [-0.888013] speed [1.723187];
	sleep 1008;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	call-script activatescr();
	move base to y-axis [0.000000] speed [12.500000];
	set ARMORED to 0;
}

Stop()
{
	call-script deactivatescr();
	move base to y-axis [-12.500000] speed [12.500000];
	set ARMORED to 1;
}

MMStatus(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
}

ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	Static_Var_2 = -1;
	while( TRUE )
	{
		if( Static_Var_1 == 1 )
		{
			if( Static_Var_2 != 1 )
			{
				call-script Go();
				Static_Var_2 = 1;
			}
		}
		else if( Static_Var_2 != 0 )
		{
			call-script Stop();
			Static_Var_2 = 0;
		}
		sleep 1000;
	}
}

Create()
{
	dont-shade base;
	dont-shade door1;
	dont-shade door2;
	dont-shade door3;
	dont-shade door4;
	dont-shade float1;
	dont-shade float2;
	dont-shade float3;
	dont-shade float4;
	dont-shade float5;
	dont-shade float6;
	dont-cache base;
	dont-cache door1;
	dont-cache door2;
	dont-cache door3;
	dont-cache door4;
	dont-cache float1;
	dont-cache float2;
	dont-cache float3;
	dont-cache float4;
	dont-cache float5;
	dont-cache float6;
	dont-cache glow;
	dont-shade glow;
	start-script SmokeUnit();
	start-script ImAMetalMaker();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		explode door3 type NOHEATCLOUD;
		explode door4 type NOHEATCLOUD;
		explode float1 type NOHEATCLOUD;
		explode float2 type NOHEATCLOUD;
		explode float3 type NOHEATCLOUD;
		explode float4 type NOHEATCLOUD;
		explode float5 type NOHEATCLOUD;
		explode float6 type NOHEATCLOUD;
		explode glow type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD | FALL;
		explode door2 type NOHEATCLOUD | FALL;
		explode door3 type NOHEATCLOUD | FALL;
		explode door4 type NOHEATCLOUD | FALL;
		explode float1 type NOHEATCLOUD | FALL;
		explode float2 type NOHEATCLOUD | FALL;
		explode float3 type NOHEATCLOUD | FALL;
		explode float4 type NOHEATCLOUD | FALL;
		explode float5 type NOHEATCLOUD | FALL;
		explode float6 type NOHEATCLOUD | FALL;
		explode glow type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode door2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode door3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode door4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode float1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode float2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode float3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode float4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode float5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode float6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode glow type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode door1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode door2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode door3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode door4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode float1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode float2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode float3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode float4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode float5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode float6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode glow type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
