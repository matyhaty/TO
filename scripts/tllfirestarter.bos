#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, sleeve, flare1, flare2, leg1, leg3, leg4,
       leg6, body;

static-var  bMoving, restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				2


walk2()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg1 to y-axis <43.791209> now;
			turn leg1 to y-axis <0.000000> speed <219.000000>;
			turn leg1 to z-axis <0.593407> now;
			turn leg1 to z-axis <0.000000> speed <3.000000>;
			turn leg3 to y-axis <30.692308> now;
			turn leg3 to y-axis <20.093407> speed <3.000000>;
			turn leg3 to z-axis <20.593407> now;
			turn leg3 to z-axis <0.593407> speed <155.093407>;
			turn leg4 to y-axis <-40.093407> now;
			turn leg4 to y-axis <-40.093407> speed <0.000000>;
			turn leg4 to z-axis <-31.000000> now;
			turn leg4 to z-axis <-0.593407> speed <152.093407>;
			turn leg6 to y-axis <0.000000> now;
			turn leg6 to y-axis <-30.390110> speed <152.093407>;
			turn leg6 to z-axis <-20.000000> speed <79.835165>;
			turn body to x-axis <5.000000> speed <25.000000>;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to z-axis <20.593407> speed <158.093407>;
			turn leg3 to y-axis <0.000000> speed <170.291209>;
			turn leg3 to z-axis <0.000000> speed <3.000000>;
			turn leg4 to y-axis <0.000000> speed <200.692308>;
			turn leg6 to z-axis <2.390110> speed <237.192308>;
			turn body to x-axis <0.000000> speed <25.000000>;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <45.000000> speed <279.791209>;
			turn leg1 to z-axis <30.000000> speed <3.000000>;
			turn leg3 to z-axis <20.593407> speed <158.093407>;
			turn leg4 to y-axis <-0.593407> speed <3.000000>;
			turn leg4 to z-axis <-31.000000> speed <152.093407>;
			turn leg6 to y-axis <3.000000> speed <167.291209>;
			turn body to x-axis <-5.000000> speed <25.000000>;
			sleep 200;
		}
		turn leg1 to y-axis <43.791209> speed <60.791209>;
		turn leg1 to z-axis <0.593407> speed <152.093407>;
		turn leg3 to y-axis <34.692308> speed <173.390110>;
		turn leg3 to z-axis <20.593407> speed <0.000000>;
		turn leg4 to y-axis <-40.093407> speed <197.692308>;
		turn leg4 to z-axis <-31.000000> speed <0.000000>;
		turn leg6 to y-axis <0.000000> speed <15.192308>;
		turn leg6 to z-axis <-20.000000> speed <237.192308>;
		turn body to x-axis <0.000000> speed <25.000000>;
		sleep 200;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walk2();
		}
		if( !Func_Var_1 )
		{
			sleep 100;
		}
	}
}

Create()
{
	hide flare1;
	hide flare2;
	bMoving = FALSE;
	gun_1 = base;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.000000> speed <90.000000>;
	turn sleeve to x-axis <0.000000> speed <90.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <280.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <280.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		gun_1 = turret;
		return (0);
	}
	if( gun_1 == 1 )
	{
		gun_1 = base;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD;
		explode flare2 type NOHEATCLOUD;
		explode leg1 type NOHEATCLOUD;
		explode leg3 type NOHEATCLOUD;
		explode leg4 type NOHEATCLOUD;
		explode leg6 type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD | FALL;
		explode flare2 type NOHEATCLOUD | FALL;
		explode leg1 type NOHEATCLOUD | FALL;
		explode leg3 type NOHEATCLOUD | FALL;
		explode leg4 type NOHEATCLOUD | FALL;
		explode leg6 type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode leg1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode leg3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode leg4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode leg6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode leg1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode leg3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode leg4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode leg6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
