#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pole, torso, mf1, mf2, ruparm, luparm, rfire, lfire,
       rloarm, lloarm, pelvis, rthigh, lthigh, lleg, rleg, rfoot,
       lfoot, ground;

static-var  bMoving, bAiming, Static_Var_3, gun_1, restore_delay;

// Signal definitions
#define SIG_AIM_3			2
#define SIG_AIM_2			4
#define SIG_AIM				8


walk()
{
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <10.000000> now;
		turn lthigh to x-axis <-53.005495> now;
		turn torso to y-axis <6.000000> now;
		turn luparm to x-axis <39.005495> now;
		turn ruparm to x-axis <-18.000000> now;
		turn rloarm to x-axis <49.005495> now;
		turn lloarm to x-axis <49.005495> now;
		turn lleg to x-axis <53.005495> now;
		turn rleg to x-axis <53.005495> now;
		turn rfoot to x-axis <-38.005495> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <-10.000000> now;
		turn lthigh to x-axis <-42.005495> now;
		turn torso to y-axis <3.000000> now;
		turn luparm to x-axis <32.005495> now;
		turn ruparm to x-axis <-11.000000> now;
		turn rloarm to x-axis <49.005495> now;
		turn lloarm to x-axis <49.005495> now;
		turn lleg to x-axis <42.005495> now;
		turn rleg to x-axis <82.016484> now;
		turn rfoot to x-axis <-31.005495> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-18.000000> now;
		turn lthigh to x-axis <-25.005495> now;
		turn torso to y-axis <0.000000> now;
		turn luparm to x-axis <27.005495> now;
		turn ruparm to x-axis <-7.000000> now;
		turn lleg to x-axis <25.005495> now;
		turn rleg to x-axis <86.016484> now;
		turn rfoot to x-axis <-23.005495> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-42.005495> now;
		turn lthigh to x-axis <5.000000> now;
		turn torso to y-axis <-3.000000> now;
		turn luparm to x-axis <8.000000> now;
		turn ruparm to x-axis <9.000000> now;
		turn rloarm to x-axis <49.005495> now;
		turn lloarm to x-axis <49.005495> now;
		turn lleg to x-axis <7.000000> now;
		turn lfoot to x-axis <-9.000000> now;
		turn rleg to x-axis <105.016484> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <-70.016484> now;
		turn lthigh to x-axis <15.000000> now;
		turn torso to y-axis <-6.000000> now;
		turn luparm to x-axis <-4.000000> now;
		turn ruparm to x-axis <18.000000> now;
		turn lleg to x-axis <15.000000> now;
		turn lfoot to x-axis <-25.005495> now;
		turn rleg to x-axis <107.016484> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-75.016484> now;
		turn lthigh to x-axis <20.000000> now;
		turn torso to y-axis <-8.000000> now;
		turn luparm to x-axis <-10.000000> now;
		turn ruparm to x-axis <25.005495> now;
		turn lleg to x-axis <26.005495> now;
		turn lfoot to x-axis <-34.005495> now;
		turn rleg to x-axis <65.005495> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <-57.005495> now;
		turn lthigh to x-axis <24.005495> now;
		turn torso to y-axis <-6.000000> now;
		turn luparm to x-axis <-24.005495> now;
		turn ruparm to x-axis <31.005495> now;
		turn rloarm to x-axis <49.005495> now;
		turn lloarm to x-axis <49.005495> now;
		turn lleg to x-axis <39.005495> now;
		turn lfoot to x-axis <-39.005495> now;
		turn rleg to x-axis <59.005495> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-45.005495> now;
		turn lthigh to x-axis <5.000000> now;
		turn torso to y-axis <-3.000000> now;
		turn luparm to x-axis <-16.000000> now;
		turn ruparm to x-axis <20.000000> now;
		turn lleg to x-axis <67.005495> now;
		turn rfoot to x-axis <-12.000000> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <-23.005495> now;
		turn lthigh to x-axis <-13.000000> now;
		turn torso to y-axis <0.000000> now;
		turn luparm to x-axis <-2.000000> now;
		turn ruparm to x-axis <10.000000> now;
		turn lleg to x-axis <79.016484> now;
		turn lfoot to x-axis <-28.005495> now;
		turn rleg to x-axis <37.005495> now;
		turn rfoot to x-axis <-16.000000> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <3.000000> now;
		turn lthigh to x-axis <-42.005495> now;
		turn torso to y-axis <3.000000> now;
		turn luparm to x-axis <12.000000> now;
		turn ruparm to x-axis <1.000000> now;
		turn rloarm to x-axis <49.005495> now;
		turn lloarm to x-axis <49.005495> now;
		turn lleg to x-axis <90.016484> now;
		turn lfoot to x-axis <-15.000000> now;
		turn rleg to x-axis <7.000000> now;
		turn rfoot to x-axis <-9.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <13.000000> now;
		turn lthigh to x-axis <-57.005495> now;
		turn torso to y-axis <6.000000> now;
		turn luparm to x-axis <21.000000> now;
		turn ruparm to x-axis <-7.000000> now;
		turn rfoot to x-axis <-19.000000> now;
		sleep 50;
	}
	move pelvis to y-axis [-1.000000] now;
	turn rthigh to x-axis <16.000000> now;
	turn lthigh to x-axis <-67.005495> now;
	turn torso to y-axis <8.000000> now;
	turn luparm to x-axis <25.005495> now;
	turn ruparm to x-axis <-12.000000> now;
	turn lleg to x-axis <56.005495> now;
	turn lfoot to x-axis <-3.000000> now;
	turn rleg to x-axis <25.005495> now;
	turn rfoot to x-axis <-33.005495> now;
	sleep 70;
}

walklegs()
{
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <11.000000> now;
		turn lthigh to x-axis <-53.005495> now;
		turn lleg to x-axis <53.005495> now;
		turn rleg to x-axis <53.005495> now;
		turn rfoot to x-axis <-38.005495> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-10.000000> now;
		turn lthigh to x-axis <-42.005495> now;
		turn lleg to x-axis <42.005495> now;
		turn rleg to x-axis <82.016484> now;
		turn rfoot to x-axis <-31.005495> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-18.000000> now;
		turn lthigh to x-axis <-25.005495> now;
		turn lleg to x-axis <25.005495> now;
		turn rleg to x-axis <86.016484> now;
		turn rfoot to x-axis <-23.005495> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-42.005495> now;
		turn lthigh to x-axis <5.000000> now;
		turn lleg to x-axis <7.000000> now;
		turn lfoot to x-axis <-9.000000> now;
		turn rleg to x-axis <105.016484> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-70.016484> now;
		turn lthigh to x-axis <15.000000> now;
		turn lleg to x-axis <15.000000> now;
		turn lfoot to x-axis <-25.005495> now;
		turn rleg to x-axis <107.016484> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <-75.016484> now;
		turn lthigh to x-axis <20.000000> now;
		turn lleg to x-axis <26.005495> now;
		turn lfoot to x-axis <-34.005495> now;
		turn rleg to x-axis <65.005495> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <-57.005495> now;
		turn lthigh to x-axis <24.005495> now;
		turn lleg to x-axis <39.005495> now;
		turn lfoot to x-axis <-39.005495> now;
		turn rleg to x-axis <57.005495> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-45.005495> now;
		turn lthigh to x-axis <5.000000> now;
		turn lleg to x-axis <67.005495> now;
		turn rfoot to x-axis <-12.000000> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <-23.005495> now;
		turn lthigh to x-axis <-13.000000> now;
		turn lleg to x-axis <79.016484> now;
		turn lfoot to x-axis <-28.005495> now;
		turn rleg to x-axis <37.005495> now;
		turn rfoot to x-axis <-16.000000> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <3.000000> now;
		turn lthigh to x-axis <-42.005495> now;
		turn lleg to x-axis <90.016484> now;
		turn lfoot to x-axis <-15.000000> now;
		turn rleg to x-axis <7.000000> now;
		turn rfoot to x-axis <-9.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.000000] now;
		turn rthigh to x-axis <13.000000> now;
		turn lthigh to x-axis <-57.005495> now;
		turn rfoot to x-axis <-19.000000> now;
		sleep 50;
	}
	move pelvis to y-axis [0.000000] now;
	turn rthigh to x-axis <16.000000> now;
	turn lthigh to x-axis <-67.005495> now;
	turn lleg to x-axis <56.005495> now;
	turn lfoot to x-axis <-3.000000> now;
	turn rleg to x-axis <25.005495> now;
	turn rfoot to x-axis <-33.005495> now;
	sleep 70;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 6 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from torso;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from luparm;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from ruparm;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <120.000000>;
				turn rleg to x-axis <0.000000> speed <120.000000>;
				turn rfoot to x-axis <0.000000> speed <120.000000>;
				turn lthigh to x-axis <0.000000> speed <120.000000>;
				turn lleg to x-axis <0.000000> speed <120.000000>;
				turn lfoot to x-axis <0.000000> speed <120.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
					turn rloarm to x-axis <90.016484> speed <120.000000>;
					turn ruparm to x-axis <0.000000> speed <120.000000>;
					turn lloarm to x-axis <90.016484> speed <120.000000>;
					turn luparm to x-axis <0.000000> speed <120.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide mf1;
	hide mf2;
	hide rfire;
	hide lfire;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	gun_1 = pole;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn rloarm to x-axis <90.016484> speed <45.000000>;
	turn lloarm to x-axis <90.016484> speed <45.000000>;
	turn ruparm to x-axis <0.000000> speed <45.000000>;
	turn luparm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	bAiming = FALSE;
}

AimFromTertiary(piecenum)
{
	piecenum = ruparm;
}

AimFromSecondary(piecenum)
{
	piecenum = luparm;
}

QueryTertiary(piecenum)
{
	piecenum = rfire;
}

QuerySecondary(piecenum)
{
	piecenum = lfire;
}

FireTertiary()
{
	show rfire;
	sleep 100;
	hide rfire;
}

FireSecondary()
{
	show lfire;
	sleep 100;
	hide lfire;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <150.000000>;
	turn lloarm to x-axis <0.000000> speed <120.000000>;
	turn rloarm to x-axis <0.000000> speed <120.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <120.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <150.000000>;
	turn lloarm to x-axis <0.000000> speed <120.000000>;
	turn rloarm to x-axis <0.000000> speed <120.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <120.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = mf2;
	}
	if( gun_1 == 1 )
	{
		piecenum = mf1;
	}
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		show mf2;
		move ruparm to z-axis [-2.000000] speed [500.000000];
		sleep 150;
		hide mf2;
		wait-for-move ruparm along z-axis;
		move ruparm to z-axis [0.000000] speed [3.000000];
	}
	if( gun_1 == 1 )
	{
		show mf1;
		move luparm to z-axis [-2.000000] speed [500.000000];
		sleep 150;
		hide mf1;
		wait-for-move luparm along z-axis;
		move luparm to z-axis [0.000000] speed [3.000000];
	}
	gun_1 = !gun_1;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <150.000000>;
	turn lloarm to x-axis <0.000000> speed <120.000000>;
	turn rloarm to x-axis <0.000000> speed <120.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <120.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	hide rfire;
	hide lfire;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type NOHEATCLOUD;
		explode lfire type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode lloarm type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode luparm type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfire type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rloarm type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode ruparm type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type NOHEATCLOUD | FALL;
		explode lfire type NOHEATCLOUD | FALL;
		explode lfoot type NOHEATCLOUD | FALL;
		explode lleg type NOHEATCLOUD | FALL;
		explode lloarm type NOHEATCLOUD | FALL;
		explode lthigh type NOHEATCLOUD | FALL;
		explode luparm type NOHEATCLOUD | FALL;
		explode pelvis type NOHEATCLOUD | FALL;
		explode rfire type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode rleg type NOHEATCLOUD | FALL;
		explode rloarm type NOHEATCLOUD | FALL;
		explode rthigh type NOHEATCLOUD | FALL;
		explode ruparm type NOHEATCLOUD | FALL;
		explode torso type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfire type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lloarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode luparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfire type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rloarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode ruparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode torso type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfire type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lloarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode luparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfire type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rloarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode ruparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
