#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base2, lid2, lid3, mmakercore, lid1, lid4, glowingthing;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


activatescr()
{
	if( TRUE )
	{
		turn lid2 to x-axis <0.593407> now;
		turn lid2 to x-axis <30.005495> speed <38.000000>;
		turn lid3 to x-axis <0.593407> now;
		turn lid3 to x-axis <-26.005495> speed <35.000000>;
		turn mmakercore to y-axis <0.000000> now;
		turn mmakercore to y-axis <-30.005495> speed <39.000000>;
		sleep 772;
	}
	if( TRUE )
	{
		move mmakercore to y-axis [5.050000] speed [6.000000];
		turn lid1 to x-axis <35.005495> speed <45.000000>;
		turn lid4 to x-axis <-30.005495> speed <39.000000>;
		turn lid2 to x-axis <60.005495> speed <39.000000>;
		turn lid3 to x-axis <-74.016484> speed <61.000000>;
		turn mmakercore to y-axis <-60.005495> speed <39.000000>;
		sleep 774;
	}
	if( TRUE )
	{
		move mmakercore to y-axis [15.839990] speed [13.000000];
		turn mmakercore to y-axis <-90.016484> speed <37.000000>;
		sleep 775;
	}
	sleep 774;
}

deactivatescr()
{
	if( TRUE )
	{
		move mmakercore to y-axis [15.839990] now;
		move mmakercore to y-axis [5.050000] speed [15.000000];
		turn lid1 to x-axis <35.258242> now;
		turn lid4 to x-axis <-30.401099> now;
		turn lid2 to x-axis <60.813187> now;
		turn lid3 to x-axis <-74.192308> now;
		turn mmakercore to y-axis <-90.016484> now;
		turn mmakercore to y-axis <-60.005495> speed <42.000000>;
		sleep 683;
	}
	if( TRUE )
	{
		move mmakercore to y-axis [0.000000] speed [7.000000];
		turn lid1 to x-axis <0.000000> speed <51.000000>;
		turn lid4 to x-axis <0.000000> speed <44.000000>;
		turn lid2 to x-axis <30.005495> speed <44.000000>;
		turn lid3 to x-axis <-26.005495> speed <69.000000>;
		turn mmakercore to y-axis <-30.005495> speed <44.000000>;
		sleep 687;
	}
	if( TRUE )
	{
		turn lid2 to x-axis <0.000000> speed <43.000000>;
		turn lid3 to x-axis <0.000000> speed <40.000000>;
		turn mmakercore to y-axis <0.000000> speed <44.000000>;
		sleep 684;
	}
	sleep 688;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base2;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	dont-cache lid1;
	dont-cache lid2;
	dont-cache lid3;
	dont-cache lid4;
	dont-cache glowingthing;
	call-script activatescr();
	set ARMORED to 0;
}

Stop()
{
	set ARMORED to 1;
	call-script deactivatescr();
	cache lid1;
	cache lid2;
	cache lid3;
	cache lid4;
	cache glowingthing;
}

MMStatus(Func_Var_1)
{
	Static_Var_2 = Func_Var_1;
}

ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	Static_Var_3 = -1;
	while( TRUE )
	{
		if( Static_Var_2 == 1 )
		{
			if( Static_Var_3 != 1 )
			{
				call-script Go();
				Static_Var_3 = 1;
			}
		}
		else if( Static_Var_3 != 0 )
		{
			call-script Stop();
			Static_Var_3 = 0;
		}
		sleep 1000;
	}
}

Create()
{
	dont-shade glowingthing;
	cache glowingthing;
	dont-shade base2;
	dont-shade lid1;
	dont-shade lid2;
	dont-shade lid3;
	dont-shade lid4;
	dont-shade mmakercore;
	start-script SmokeUnit();
	Static_Var_1 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	set ARMORED to 1;
	start-script ImAMetalMaker();
}

HitByWeapon(anglex, anglez)
{
	if( get ACTIVATION )
	{
		Static_Var_1 = 1;
	}
	if( Static_Var_1 )
	{
		signal 2;
		set-signal-mask 2;
		set ACTIVATION to 0;
		sleep 8000;
		Static_Var_1 = 0;
		set ACTIVATION to 100;
	}
}

SweetSpot(piecenum)
{
	piecenum = base2;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base2 type NOHEATCLOUD;
		explode glowingthing type NOHEATCLOUD;
		explode lid1 type NOHEATCLOUD;
		explode lid2 type NOHEATCLOUD;
		explode lid3 type NOHEATCLOUD;
		explode lid4 type NOHEATCLOUD;
		explode mmakercore type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base2 type NOHEATCLOUD;
		explode glowingthing type NOHEATCLOUD | SHATTER;
		explode lid1 type NOHEATCLOUD | FALL;
		explode lid2 type NOHEATCLOUD | FALL;
		explode lid3 type NOHEATCLOUD | FALL;
		explode lid4 type NOHEATCLOUD | FALL;
		explode mmakercore type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base2 type NOHEATCLOUD;
		explode glowingthing type NOHEATCLOUD | SHATTER;
		explode lid1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lid2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lid3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lid4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode mmakercore type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base2 type NOHEATCLOUD;
	explode glowingthing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode lid1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lid2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lid3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lid4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode mmakercore type NOHEATCLOUD;
	return (corpsetype);
}
