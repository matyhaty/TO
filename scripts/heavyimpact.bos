#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hips, rupleg, rlowleg, rfoot, rtoe, lupleg, llowleg,
       lfoot, ltoe, torso, cap, gunslots, barrel1, barrel2, barrel3,
       barrel4, emit1, emit2, emit3, emit4;

static-var  bMoving, bAiming, Static_Var_3, gun_1;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		turn hips to x-axis <10.000000> speed <10.000000>;
		turn rupleg to x-axis <10.000000> speed <39.917582>;
		turn rlowleg to x-axis <10.000000> speed <39.917582>;
		turn rfoot to x-axis <-20.000000> speed <79.835165>;
		turn lupleg to x-axis <-20.000000> speed <79.835165>;
		turn llowleg to x-axis <-10.000000> speed <39.917582>;
		turn lfoot to x-axis <10.000000> speed <39.917582>;
		sleep 200;
	}
	if( bMoving )
	{
		turn rupleg to x-axis <15.000000> speed <33.219780>;
		turn rlowleg to x-axis <25.000000> speed <99.659341>;
		turn rfoot to x-axis <-40.000000> speed <132.884615>;
		turn lupleg to x-axis <-40.000000> speed <132.884615>;
		turn llowleg to x-axis <10.000000> speed <132.884615>;
		turn ltoe to x-axis <20.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rlowleg to x-axis <10.000000> speed <99.659341>;
		turn rfoot to x-axis <-30.000000> speed <66.439560>;
		turn rtoe to x-axis <5.000000> speed <33.219780>;
		turn lupleg to x-axis <-35.000000> speed <33.219780>;
		turn llowleg to x-axis <10.000000> now;
		turn lfoot to x-axis <25.000000> speed <99.659341>;
		turn ltoe to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rupleg to x-axis <0.000000> speed <99.659341>;
		turn rlowleg to x-axis <-10.000000> speed <132.884615>;
		turn rfoot to x-axis <5.000000> speed <232.549451>;
		turn rtoe to x-axis <15.000000> speed <66.439560>;
		turn lupleg to x-axis <-20.000000> speed <99.659341>;
		turn llowleg to x-axis <0.000000> speed <66.439560>;
		turn lfoot to x-axis <20.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rupleg to x-axis <-10.000000> speed <66.439560>;
		turn lupleg to x-axis <0.000000> speed <132.884615>;
		turn lfoot to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn hips to x-axis <0.000000> speed <10.000000>;
		turn rupleg to x-axis <-20.000000> speed <66.439560>;
		turn rlowleg to x-axis <-10.000000> now;
		turn rfoot to x-axis <10.000000> speed <33.219780>;
		turn lupleg to x-axis <10.000000> speed <66.439560>;
		turn llowleg to x-axis <10.000000> speed <66.439560>;
		turn lfoot to x-axis <-20.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn lupleg to x-axis <15.000000> speed <33.219780>;
		turn llowleg to x-axis <25.000000> speed <99.659341>;
		turn lfoot to x-axis <-40.000000> speed <132.884615>;
		turn rupleg to x-axis <-40.000000> speed <132.884615>;
		turn rlowleg to x-axis <10.000000> speed <132.884615>;
		turn rtoe to x-axis <20.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn llowleg to x-axis <10.000000> speed <99.659341>;
		turn lfoot to x-axis <-30.000000> speed <66.439560>;
		turn ltoe to x-axis <5.000000> speed <33.219780>;
		turn rupleg to x-axis <-35.000000> speed <33.219780>;
		turn rlowleg to x-axis <10.000000> now;
		turn rfoot to x-axis <25.000000> speed <99.659341>;
		turn rtoe to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn lupleg to x-axis <0.000000> speed <99.659341>;
		turn llowleg to x-axis <-10.000000> speed <132.884615>;
		turn lfoot to x-axis <5.000000> speed <232.549451>;
		turn ltoe to x-axis <15.000000> speed <66.439560>;
		turn rupleg to x-axis <-20.000000> speed <99.659341>;
		turn rlowleg to x-axis <0.000000> speed <66.439560>;
		turn rfoot to x-axis <20.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn lupleg to x-axis <-10.000000> speed <66.439560>;
		turn rupleg to x-axis <0.000000> speed <132.884615>;
		turn rfoot to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
}

walklegs()
{
	if( bMoving )
	{
		turn rupleg to x-axis <10.000000> speed <66.439560>;
		turn rlowleg to x-axis <10.000000> speed <66.439560>;
		turn rfoot to x-axis <-20.000000> speed <132.884615>;
		turn lupleg to x-axis <-20.000000> speed <66.439560>;
		turn llowleg to x-axis <-10.000000> now;
		turn lfoot to x-axis <10.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rupleg to x-axis <15.000000> speed <33.219780>;
		turn rlowleg to x-axis <25.000000> speed <99.659341>;
		turn rfoot to x-axis <-40.000000> speed <132.884615>;
		turn lupleg to x-axis <-40.000000> speed <132.884615>;
		turn llowleg to x-axis <10.000000> speed <132.884615>;
		turn ltoe to x-axis <20.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rlowleg to x-axis <10.000000> speed <99.659341>;
		turn rfoot to x-axis <-30.000000> speed <66.439560>;
		turn rtoe to x-axis <5.000000> speed <33.219780>;
		turn lupleg to x-axis <-35.000000> speed <33.219780>;
		turn llowleg to x-axis <10.000000> now;
		turn lfoot to x-axis <25.000000> speed <99.659341>;
		turn ltoe to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rupleg to x-axis <0.000000> speed <99.659341>;
		turn rlowleg to x-axis <-10.000000> speed <132.884615>;
		turn rfoot to x-axis <5.000000> speed <232.549451>;
		turn rtoe to x-axis <15.000000> speed <66.439560>;
		turn lupleg to x-axis <-20.000000> speed <99.659341>;
		turn llowleg to x-axis <0.000000> speed <66.439560>;
		turn lfoot to x-axis <20.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rupleg to x-axis <-10.000000> speed <66.439560>;
		turn lupleg to x-axis <0.000000> speed <132.884615>;
		turn lfoot to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn rupleg to x-axis <-20.000000> speed <66.439560>;
		turn rlowleg to x-axis <-10.000000> now;
		turn rfoot to x-axis <10.000000> speed <33.219780>;
		turn lupleg to x-axis <10.000000> speed <66.439560>;
		turn llowleg to x-axis <10.000000> speed <66.439560>;
		turn lfoot to x-axis <-20.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn lupleg to x-axis <15.000000> speed <33.219780>;
		turn llowleg to x-axis <25.000000> speed <99.659341>;
		turn lfoot to x-axis <-40.000000> speed <132.884615>;
		turn rupleg to x-axis <-40.000000> speed <132.884615>;
		turn rlowleg to x-axis <10.000000> speed <132.884615>;
		turn rtoe to x-axis <20.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn llowleg to x-axis <10.000000> speed <99.659341>;
		turn lfoot to x-axis <-30.000000> speed <66.439560>;
		turn ltoe to x-axis <5.000000> speed <33.219780>;
		turn rupleg to x-axis <-35.000000> speed <33.219780>;
		turn rlowleg to x-axis <10.000000> now;
		turn rfoot to x-axis <25.000000> speed <99.659341>;
		turn rtoe to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
	if( bMoving )
	{
		turn lupleg to x-axis <0.000000> speed <99.659341>;
		turn llowleg to x-axis <-10.000000> speed <132.884615>;
		turn lfoot to x-axis <5.000000> speed <232.549451>;
		turn ltoe to x-axis <15.000000> speed <66.439560>;
		turn rupleg to x-axis <-20.000000> speed <99.659341>;
		turn rlowleg to x-axis <0.000000> speed <66.439560>;
		turn rfoot to x-axis <20.000000> speed <33.219780>;
		sleep 125;
	}
	if( bMoving )
	{
		turn lupleg to x-axis <-10.000000> speed <66.439560>;
		turn rupleg to x-axis <0.000000> speed <132.884615>;
		turn rfoot to x-axis <0.000000> speed <132.884615>;
		sleep 125;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move hips to y-axis [0.000000] speed [1.000000];
				turn rlowleg to x-axis <0.000000> speed <200.038462>;
				turn rupleg to x-axis <0.000000> speed <200.038462>;
				turn rfoot to x-axis <0.000000> speed <200.038462>;
				turn rtoe to x-axis <0.000000> speed <200.038462>;
				turn lupleg to x-axis <0.000000> speed <200.038462>;
				turn llowleg to x-axis <0.000000> speed <200.038462>;
				turn lfoot to x-axis <0.000000> speed <200.038462>;
				turn ltoe to x-axis <0.000000> speed <200.038462>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.016484>;
					turn hips to x-axis <0.000000> speed <200.038462>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide emit1;
	hide emit2;
	hide emit3;
	hide emit4;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	gun_1 = base;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = emit1;
	}
	if( gun_1 == 1 )
	{
		piecenum = emit2;
	}
	if( gun_1 == 2 )
	{
		piecenum = emit3;
	}
	if( gun_1 == 3 )
	{
		piecenum = emit4;
	}
}

RestoreAfterDelay()
{
	sleep 2750;
	turn torso to y-axis <0.000000> speed <90.016484>;
	turn hips to x-axis <0.000000> speed <45.005495>;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <90.000000>;
	turn hips to x-axis <0.000000> - pitch speed <20.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn hips around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to z-axis [-6.000000] speed [120.000000];
		emit-sfx 1024 + 0 from emit1;
		sleep 500;
		wait-for-move barrel1 along z-axis;
		move barrel1 to z-axis [0.000000] speed [10.000000];
	}
	if( gun_1 == 1 )
	{
		move barrel2 to z-axis [-6.000000] speed [120.000000];
		emit-sfx 1024 + 0 from emit2;
		sleep 500;
		wait-for-move barrel2 along z-axis;
		move barrel2 to z-axis [0.000000] speed [10.000000];
	}
	if( gun_1 == 2 )
	{
		move barrel3 to z-axis [-6.000000] speed [120.000000];
		emit-sfx 1024 + 0 from emit3;
		sleep 500;
		wait-for-move barrel3 along z-axis;
		move barrel3 to z-axis [0.000000] speed [10.000000];
	}
	if( gun_1 == 3 )
	{
		move barrel4 to z-axis [-6.000000] speed [120.000000];
		emit-sfx 1024 + 0 from emit4;
		sleep 500;
		wait-for-move barrel4 along z-axis;
		move barrel4 to z-axis [0.000000] speed [10.000000];
	}
	++gun_1;
	if( gun_1 == 4 )
	{
		gun_1 = base;
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hips type NOHEATCLOUD;
		explode gunslots type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode barrel3 type NOHEATCLOUD;
		explode barrel4 type NOHEATCLOUD;
		explode llowleg type NOHEATCLOUD;
		explode lupleg type NOHEATCLOUD;
		explode cap type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rlowleg type NOHEATCLOUD;
		explode rupleg type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hips type NOHEATCLOUD | FALL;
		explode gunslots type NOHEATCLOUD | SHATTER;
		explode lfoot type NOHEATCLOUD | FALL;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode barrel3 type NOHEATCLOUD | FALL;
		explode barrel4 type NOHEATCLOUD | FALL;
		explode llowleg type NOHEATCLOUD | FALL;
		explode lupleg type NOHEATCLOUD | FALL;
		explode cap type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode rupleg type NOHEATCLOUD | FALL;
		explode rlowleg type NOHEATCLOUD | FALL;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode hips type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode gunslots type NOHEATCLOUD | SHATTER;
		explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode llowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode cap type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rlowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hips type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode gunslots type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode llowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode cap type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rupleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rlowleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD;
	return (corpsetype);
}
