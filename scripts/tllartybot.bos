#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, t1, turret, sleeve, flare1, flare2, barrel1, barrel2,
       pelvis, rleg, rfoot, lleg, lfoot, lthigh, rthigh, base,
       guns, flare3, flare4, barrel3, barrel4;

static-var  bMoving, Static_Var_2, Static_Var_3, gun_1, gun_2;

// Signal definitions
#define SIG_AIM				4
#define SIG_AIM_2			8


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		move torso to y-axis [0.900000] now;
		move torso to z-axis [0.000000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn torso to x-axis <-3.500000> now;
		turn lthigh to x-axis <-13.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn rleg to x-axis <-50.593407> now;
		turn rfoot to x-axis <57.000000> now;
		turn lleg to x-axis <13.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <-4.593407> now;
		turn lthigh to x-axis <-7.390110> now;
		turn rthigh to x-axis <-4.593407> now;
		turn rleg to x-axis <-52.692308> now;
		turn rfoot to x-axis <36.593407> now;
		turn lleg to x-axis <21.500000> now;
		turn lfoot to x-axis <-3.890110> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.093407> now;
		turn rthigh to x-axis <-7.890110> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn torso to x-axis <-1.890110> now;
		turn lthigh to x-axis <-5.291209> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <-68.192308> now;
		turn rfoot to x-axis <39.000000> now;
		turn lleg to x-axis <28.791209> now;
		turn lfoot to x-axis <-8.093407> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		turn torso to x-axis <2.192308> now;
		turn lthigh to x-axis <0.390110> now;
		turn rthigh to x-axis <-22.500000> now;
		turn rleg to x-axis <-38.291209> now;
		turn rfoot to x-axis <61.500000> now;
		turn lleg to x-axis <28.500000> now;
		turn lfoot to x-axis <16.890110> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.800000] now;
		turn torso to x-axis <2.890110> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.400000] now;
		turn torso to x-axis <3.692308> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.700000] now;
		turn torso to x-axis <3.593407> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <12.692308> now;
		turn rthigh to x-axis <-20.000000> now;
		turn rleg to x-axis <-34.500000> now;
		turn rfoot to x-axis <54.500000> now;
		turn lleg to x-axis <7.390110> now;
		turn lfoot to x-axis <19.291209> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn torso to x-axis <-2.291209> now;
		turn lthigh to x-axis <15.791209> now;
		turn rthigh to x-axis <-17.890110> now;
		turn rleg to x-axis <-27.093407> now;
		turn rfoot to x-axis <45.000000> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <27.791209> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn torso to x-axis <-4.500000> now;
		turn lthigh to x-axis <8.093407> now;
		turn rthigh to x-axis <-13.692308> now;
		turn rleg to x-axis <13.692308> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.291209> now;
		turn lfoot to x-axis <42.500000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn torso to x-axis <-5.390110> now;
		turn lthigh to x-axis <-0.291209> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <27.791209> now;
		turn rfoot to x-axis <-11.291209> now;
		turn lleg to x-axis <-62.890110> now;
		turn lfoot to x-axis <67.500000> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.093407> now;
		turn lthigh to x-axis <-5.093407> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn torso to x-axis <-2.192308> now;
		turn lthigh to x-axis <-7.692308> now;
		turn rthigh to x-axis <-7.390110> now;
		turn rleg to x-axis <31.291209> now;
		turn rfoot to x-axis <-9.093407> now;
		turn lleg to x-axis <-64.390110> now;
		turn lfoot to x-axis <34.093407> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		move torso to y-axis [0.800000] now;
		turn torso to x-axis <2.000000> now;
		turn lthigh to x-axis <-21.093407> now;
		turn rthigh to x-axis <-1.791209> now;
		turn rleg to x-axis <28.791209> now;
		turn rfoot to x-axis <24.593407> now;
		turn lleg to x-axis <-36.890110> now;
		turn lfoot to x-axis <57.291209> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.600000] now;
		turn torso to x-axis <2.593407> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.400000] now;
		turn torso to x-axis <3.291209> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.800000] now;
		turn torso to x-axis <2.192308> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <-15.791209> now;
		turn rthigh to x-axis <10.192308> now;
		turn rleg to x-axis <-12.692308> now;
		turn lleg to x-axis <-29.192308> now;
		turn lfoot to x-axis <45.390110> now;
		sleep 130;
	}
	move pelvis to y-axis [0.800000] now;
	turn torso to x-axis <-2.291209> now;
	turn lthigh to x-axis <-13.390110> now;
	turn rthigh to x-axis <10.500000> now;
	turn rleg to x-axis <-30.593407> now;
	turn rfoot to x-axis <32.692308> now;
	turn lleg to x-axis <-14.791209> now;
	turn lfoot to x-axis <28.093407> now;
	sleep 110;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn lthigh to x-axis <-13.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn rleg to x-axis <-50.593407> now;
		turn rfoot to x-axis <57.000000> now;
		turn lleg to x-axis <13.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <-7.390110> now;
		turn rthigh to x-axis <-4.593407> now;
		turn rleg to x-axis <-52.692308> now;
		turn rfoot to x-axis <36.593407> now;
		turn lleg to x-axis <21.500000> now;
		turn lfoot to x-axis <-3.890110> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn rthigh to x-axis <-7.890110> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <-5.291209> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <-68.192308> now;
		turn rfoot to x-axis <39.000000> now;
		turn lleg to x-axis <28.791209> now;
		turn lfoot to x-axis <-8.093407> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		turn lthigh to x-axis <0.390110> now;
		turn rthigh to x-axis <-22.500000> now;
		turn rleg to x-axis <-38.291209> now;
		turn rfoot to x-axis <61.500000> now;
		turn lleg to x-axis <28.500000> now;
		turn lfoot to x-axis <16.890110> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <12.692308> now;
		turn rthigh to x-axis <-20.000000> now;
		turn rleg to x-axis <-34.500000> now;
		turn rfoot to x-axis <54.500000> now;
		turn lleg to x-axis <7.390110> now;
		turn lfoot to x-axis <19.291209> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <15.791209> now;
		turn rthigh to x-axis <-17.890110> now;
		turn rleg to x-axis <-27.093407> now;
		turn rfoot to x-axis <45.000000> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <27.791209> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn lthigh to x-axis <8.093407> now;
		turn rthigh to x-axis <-13.692308> now;
		turn rleg to x-axis <13.692308> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.291209> now;
		turn lfoot to x-axis <42.500000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <-0.291209> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <27.791209> now;
		turn rfoot to x-axis <-11.291209> now;
		turn lleg to x-axis <-62.890110> now;
		turn lfoot to x-axis <67.500000> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn lthigh to x-axis <-5.093407> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <-7.692308> now;
		turn rthigh to x-axis <-7.390110> now;
		turn rleg to x-axis <31.291209> now;
		turn rfoot to x-axis <-9.093407> now;
		turn lleg to x-axis <-64.390110> now;
		turn lfoot to x-axis <34.093407> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		turn lthigh to x-axis <-21.093407> now;
		turn rthigh to x-axis <-1.791209> now;
		turn rleg to x-axis <28.791209> now;
		turn rfoot to x-axis <24.593407> now;
		turn lleg to x-axis <-36.890110> now;
		turn lfoot to x-axis <57.291209> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <-15.791209> now;
		turn rthigh to x-axis <10.192308> now;
		turn rleg to x-axis <-12.692308> now;
		turn lleg to x-axis <-29.192308> now;
		turn lfoot to x-axis <45.390110> now;
		sleep 130;
	}
	move pelvis to y-axis [0.800000] now;
	turn lthigh to x-axis <-13.390110> now;
	turn rthigh to x-axis <10.500000> now;
	turn rleg to x-axis <-30.593407> now;
	turn rfoot to x-axis <32.692308> now;
	turn lleg to x-axis <-14.791209> now;
	turn lfoot to x-axis <28.093407> now;
	sleep 110;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] now;
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rfoot to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn lfoot to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
					turn torso to z-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	gun_1 = torso;
	gun_2 = torso;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

RestoreAfterDelay()
{
	sleep 3000;
	turn turret to y-axis <0.000000> speed <90.000000>;
	turn sleeve to x-axis <0.000000> speed <45.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <140.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <45.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to z-axis [-1.000000] speed [100.000000];
		show flare1;
		sleep 100;
		hide flare1;
		move barrel1 to z-axis [0.000000] speed [4.000000];
		gun_1 = t1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move barrel2 to z-axis [-1.000000] speed [100.000000];
		show flare2;
		sleep 100;
		hide flare2;
		move barrel2 to z-axis [0.000000] speed [4.000000];
		gun_1 = torso;
		return (0);
	}
}

AimFromSecondary(piecenum)
{
	piecenum = torso;
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare3;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare4;
	}
}

RestoreAfterDelay2()
{
	sleep 2750;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn t1 to y-axis <0.000000> speed <90.000000>;
	Static_Var_2 = 0;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	Static_Var_2 = 1;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <140.000000>;
	turn t1 to y-axis heading * <-0.005495> speed <90.000000>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireSecondary()
{
	if( gun_2 == 0 )
	{
		move barrel3 to z-axis [-2.000000] speed [500.000000];
		show flare3;
		sleep 100;
		hide flare3;
		move barrel3 to z-axis [0.000000] speed [4.000000];
		gun_2 = t1;
		return (0);
	}
	if( gun_2 == 1 )
	{
		move barrel4 to z-axis [-2.000000] speed [500.000000];
		show flare4;
		sleep 100;
		hide flare4;
		move barrel4 to z-axis [0.000000] speed [4.000000];
		gun_2 = torso;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode barrel1 type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | FALL;
		explode torso type NOHEATCLOUD | SHATTER;
		explode lfoot type NOHEATCLOUD | FALL;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode lleg type NOHEATCLOUD | FALL;
		explode lthigh type NOHEATCLOUD | FALL;
		explode pelvis type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode rleg type NOHEATCLOUD | FALL;
		explode rthigh type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode torso type NOHEATCLOUD | SHATTER;
		explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve type NOHEATCLOUD;
	return (corpsetype);
}
