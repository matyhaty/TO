#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, piling1, gun1, nano1, piling2, gun2, nano2, slip,
       explode1, explode2, explode3, explode4, explode5, explode6;

static-var  spray, unitviewer, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_ACTIVATE			2


activatescr()
{
	turn gun2 to x-axis <20.000000> speed <10.000000>;
	turn gun1 to x-axis <20.000000> speed <10.000000>;
	turn piling1 to y-axis <90.021978> speed <90.000000>;
	turn piling2 to y-axis <-90.021978> speed <90.000000>;
	wait-for-turn piling1 around y-axis;
	wait-for-turn piling2 around y-axis;
	sleep 500;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

deactivatescr()
{
	turn piling1 to y-axis <90.021978> now;
	turn piling1 to y-axis <0.000000> speed <90.000000>;
	turn piling2 to y-axis <-90.021978> now;
	turn piling2 to y-axis <0.000000> speed <90.000000>;
	turn gun2 to x-axis <20.000000> now;
	turn gun1 to x-axis <20.000000> now;
	turn gun2 to x-axis <0.000000> speed <10.000000>;
	turn gun1 to x-axis <0.000000> speed <10.000000>;
	sleep 500;
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	spray = base;
	unitviewer = FALSE;
	call-script InitState();
}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = nano1;
	}
	if( spray != 0 )
	{
		piecenum = nano2;
	}
	spray = !spray;
}

Demo()
{
	unitviewer = TRUE;
}

Activate()
{
	signal SIG_ACTIVATE;
	start-script RequestState(0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	if( !unitviewer )
	{
		sleep 5000;
	}
	set-signal-mask 0;
	start-script RequestState(1);
}

QueryBuildInfo(piecenum)
{
	piecenum = slip;
}

SweetSpot(piecenum)
{
	piecenum = piling1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode nano1 type NOHEATCLOUD;
		explode nano2 type NOHEATCLOUD;
		explode explode1 type NOHEATCLOUD;
		explode explode2 type NOHEATCLOUD;
		explode explode3 type NOHEATCLOUD;
		explode explode4 type NOHEATCLOUD;
		explode explode5 type NOHEATCLOUD;
		explode explode6 type NOHEATCLOUD;
		explode gun1 type NOHEATCLOUD;
		explode gun2 type NOHEATCLOUD;
		explode piling1 type NOHEATCLOUD;
		explode piling2 type NOHEATCLOUD;
		explode slip type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode nano1 type NOHEATCLOUD;
		explode nano2 type NOHEATCLOUD;
		explode explode1 type NOHEATCLOUD;
		explode explode2 type NOHEATCLOUD;
		explode explode3 type NOHEATCLOUD;
		explode explode4 type NOHEATCLOUD;
		explode explode5 type NOHEATCLOUD;
		explode explode6 type NOHEATCLOUD;
		explode gun1 type NOHEATCLOUD;
		explode gun2 type NOHEATCLOUD;
		explode piling1 type NOHEATCLOUD;
		explode piling2 type NOHEATCLOUD;
		explode slip type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode nano1 type NOHEATCLOUD;
	explode nano2 type NOHEATCLOUD;
	explode explode1 type NOHEATCLOUD;
	explode explode2 type NOHEATCLOUD;
	explode explode3 type NOHEATCLOUD;
	explode explode4 type NOHEATCLOUD;
	explode explode5 type NOHEATCLOUD;
	explode explode6 type NOHEATCLOUD;
	explode gun1 type NOHEATCLOUD;
	explode gun2 type NOHEATCLOUD;
	explode piling1 type NOHEATCLOUD;
	explode piling2 type NOHEATCLOUD;
	explode slip type NOHEATCLOUD;
	return (corpsetype);
}
